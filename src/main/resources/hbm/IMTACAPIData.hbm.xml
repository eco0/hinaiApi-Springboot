<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<sql-query name="loadBranchDetailsForSatuSehat">
	<return-scalar column="ID" type="string"/>
		<![CDATA[SELECT ORG.ID AS ID FROM ORGSTRUCTURE ORG WHERE ORG.CODE = :branchid ]]>
	</sql-query>
	
	<!-- Filter Branch -->
	<sql-query name="getPatientDischargeSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="string"/>
		<return-scalar column="PATIENT_ID" type="string"/>
		<return-scalar column="VISITID" type="string"/>
		<![CDATA[SELECT 
          			DISTINCT EN.ENCOUNTER_ID AS ENCOUNTER_ID,
					V.PATIENT_ID AS PATIENT_ID,
					V.VISITID AS VISITID 
		        FROM INS_MASTER_INVOICE MASTERINV
		        INNER JOIN VISIT V ON V.VISITID = MASTERINV.VISIT_ID
		        INNER JOIN ENCOUNTER EN ON EN.ENCOUNTER_FK = MASTERINV.VISIT_ID
		        WHERE MASTERINV.CREATEDDATETIME BETWEEN TO_DATE(:startdate, 'YYYY-MM-DD HH24:MI') AND TO_DATE(:enddate, 'YYYY-MM-DD HH24:MI') 
		        AND MASTERINV.HOSPITAL_ID = :branchid
		        AND MASTERINV.INVOICE_STATUS ='Settled'
		        AND EN.ENCOUNTERTYPE NOT IN ('1138', '1139')
				AND V.VISITTYPE <> '109'
        		ORDER BY
					EN.ENCOUNTER_ID
				]]>
	</sql-query>
	
	<sql-query name="getPatientSatuSehat">
		<return-scalar column="REGISTRATIONDATE" type="string"/>
		<return-scalar column="PATIENT_ID" type="long"/>
		<return-scalar column="PATIENTNAME" type="string"/>
		<return-scalar column="MRNO" type="string"/>
		<return-scalar column="GENDER" type="string"/>
		<return-scalar column="DOB" type="string"/>
		<return-scalar column="NIK" type="string"/>
		<return-scalar column="POLICYNO" type="string"/>
		<return-scalar column="MOBILENO" type="string"/>
		<return-scalar column="MARTIAL_STATUS" type="string"/>
		<return-scalar column="ADDRESS" type="string"/>
		<return-scalar column="STATE" type="string"/>
		<return-scalar column="DISTRICT" type="string"/>
		<return-scalar column="CITY" type="string"/>
		<return-scalar column="VILLAGE" type="string"/>
		<return-scalar column="PIN" type="string"/>
		<![CDATA[SELECT 
				    A.REGISTRATIONDATE AS REGISTRATIONDATE,
				    A.PATIENT_ID AS PATIENT_ID,
				    A.PATIENTNAME AS PATIENTNAME,
				    A.MRNO AS MRNO,
				    D.LOOKUPVALUE AS GENDER,
				    TO_CHAR(A.DOB, 'YYYY-MM-DD') AS DOB,
				    CASE WHEN C.IDENTITY_TYPE ='655085' THEN C.PATIDNO ELSE '-' END AS NIK,
				    B.POLICYNO AS POLICYNO,
				    A.MOBILENO AS MOBILENO,
				    E.LOOKUPVALUE AS MARTIAL_STATUS,
				    F.ADDRESS AS ADDRESS,
				    G.STATE_NAME AS STATE,
				    H.DISTRICT_NAME AS DISTRICT,
				    I.CITY_NAME AS CITY,  
				    J.VILLAGE_NAME AS VILLAGE,
				    F.PIN AS PIN
				FROM PATIENT A
				LEFT JOIN PATIENT_POLICY_DETAILS B ON (A.PATIENT_ID = B.PATIENT_ID)
				LEFT JOIN PLANDEFINITION PD ON (B.PLAN_ID = PD.PLAN_ID)
				LEFT JOIN GROUPS GPRS ON (PD.CAREPLANGROUP = GPRS.GROUPID AND GPRS.GROUPNAME='BPJS')
				LEFT JOIN PATIENT_IDENTIFICATION C ON (A.PATIENT_ID = C.PATIENT_ID)
				LEFT JOIN LOOKUPENTITY D ON (A.GENDERID = D.LOOKUPID)
				LEFT JOIN LOOKUPENTITY E ON (A.MARTIAL_STATUS = E.LOOKUPID)
				LEFT JOIN PATIENT_ADDRESS F ON F.PATIENT_ID = A.PATIENT_ID AND F.ACTIVE = '1'
				LEFT JOIN STATE G ON (F.STATE_ID = G.STATE_ID)
				LEFT JOIN DISTRICT H ON (F.DISTRICT_ID = H.DISTRICT_ID)
				LEFT JOIN CITYMASTER I ON (F.CITY = I.CITY_ID)
				LEFT JOIN VILLAGEMASTER J ON (F.VILLAGE = J.VILLAGE_ID)
				LEFT JOIN ELIGIBILITY ELG ON (ELG.PATIENTID = A.PATIENT_ID)
				WHERE A.PATIENT_ID = :patientId
				ORDER BY A.REGISTRATIONDATE DESC
				FETCH FIRST 1 ROW ONLY]]>
	</sql-query>
	
	<sql-query name="getEncounterSatuSehat">
		<return-scalar column="ENCOUNTER_BRANCH_ID" type="long"/>
		<return-scalar column="VISIT_TYPE" type="string"/>
		<return-scalar column="VISIT_DATE" type="string"/>
		<return-scalar column="VISITID" type="long"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="ENCOUNTER_TYPE" type="string"/>
		<return-scalar column="ENCOUNTER_TIME" type="string"/>
		<return-scalar column="STARTCONSULTATION_DATETIME" type="string"/>
		<return-scalar column="ENDCONSULTATION_DATETIME" type="string"/>
		<return-scalar column="DEPARTMENT_NAME" type="string"/>
		<return-scalar column="DEPARTMENT_ID" type="long"/>
		<return-scalar column="UNITNAME" type="string"/>
		<return-scalar column="UNITID" type="long"/>
		<return-scalar column="MRNO" type="string"/>
		<return-scalar column="NOSEP" type="string"/>
		<![CDATA[SELECT
				    C.CODE AS ENCOUNTER_BRANCH_ID,
				    E.LOOKUPVALUE AS VISIT_TYPE,
				    TO_CHAR(V.VISIT_DATE, 'DD-MM-YYYY') AS VISIT_DATE,
				    V.VISITID AS VISITID,
				    A.ENCOUNTER_ID AS ENCOUNTER_ID,
				    F.LOOKUPVALUE AS ENCOUNTER_TYPE,
				    TO_CHAR(A.DATE_TIME ,'DD-MM-YYYY HH24:MI:SS') AS ENCOUNTER_TIME,
				    CASE WHEN A.STARTCONSULTATION_DATETIME IS NOT NULL THEN TO_CHAR(A.STARTCONSULTATION_DATETIME ,'YYYY-MM-DD HH24:MI:SS') ELSE TO_CHAR(SVL.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') END AS STARTCONSULTATION_DATETIME,
            		CASE WHEN A.ENDCONSULTATION_DATETIME IS NOT NULL THEN TO_CHAR(A.ENDCONSULTATION_DATETIME ,'YYYY-MM-DD HH24:MI:SS') ELSE TO_CHAR(SVL.ENDDATETIME ,'DD-MM-YYYY HH24:MI:SS') END AS ENDCONSULTATION_DATETIME,
				    H.DEPARTMENT_NAME AS DEPARTMENT_NAME,
				    H.DEPARTMENT_CODE AS DEPARTMENT_ID,
				    G.UNITNAME AS UNITNAME,
				    G.UNITID AS UNITID,
				    B.MRNO AS MRNO,
				    ELG.AUTHORIZATION_CODE AS NOSEP
				FROM
				    ENCOUNTER A
				INNER JOIN PATIENT B ON
				    (A.PATIENTID = B.PATIENT_ID)
				INNER JOIN VISIT V ON
				    (B.PATIENT_ID = V.PATIENT_ID AND A.ENCOUNTER_FK  = V.VISITID)
				INNER JOIN ORGSTRUCTURE C ON
				    (V.SITE_ID = C.ID)
				INNER JOIN LOOKUPENTITY E ON
				    (V.VISITTYPE = E.LOOKUPID)
				INNER JOIN LOOKUPENTITY F ON
				    (A.ENCOUNTERTYPE = F.LOOKUPID)
				LEFT JOIN UNITS G ON
				  (A.DEPT_FK = G.DEPARTMENTID AND A.UNITID = G.UNITID)
				INNER JOIN HISDEPARTMENT H ON
				  (A.DEPT_FK = H.DEPARTMENT_ID)
				LEFT JOIN PATIENT_POLICY_DETAILS PPD ON 
					(PPD.PATIENT_ID = B.PATIENT_ID AND PPD.ACTIVE = '1')
        		LEFT JOIN PLANDEFINITION PD ON 
        			(PPD.PLAN_ID = PD.PLAN_ID)
				LEFT JOIN GROUPS GPRS ON 
					(PD.CAREPLANGROUP = GPRS.GROUPID AND GPRS.GROUPNAME='BPJS')
				LEFT JOIN ELIGIBILITY ELG ON 
					(ELG.PATIENTID = V.PATIENT_ID AND ELG.VISITID = V.VISITID)
				LEFT OUTER JOIN PATIENT_VISIT_STATUS SVL ON SVL.ENCOUNTERID = A.ENCOUNTER_ID AND SVL.TYPE = 1
				WHERE V.SITE_ID = :branchId AND A.PATIENTID = :patientId  AND A.ENCOUNTER_ID = :encounterId
				ORDER BY A.DATE_TIME DESC
				FETCH FIRST 1 ROW ONLY]]>
	</sql-query>
	
	<sql-query name="getMedisSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="CONSULTANT_NAME" type="string"/>
		<return-scalar column="CONSULTANT_NIK" type="string"/>
		<return-scalar column="EMPNO" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_CODE" type="string"/>
		<return-scalar column="PRIMARY" type="string"/>
		<return-scalar column="SECONDARY" type="string"/>
		<return-scalar column="CO_MORBID" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_DESCRIPTION" type="string"/>
		<return-scalar column="PRIMARY_DESC" type="string"/>
		<return-scalar column="SECONDARY_DESC" type="string"/>
		<return-scalar column="CO_MORBID_DESC" type="string"/>
		<![CDATA[SELECT
				  PR.ENCOUNTERID AS ENCOUNTER_ID,
				  U.USERNAME AS CONSULTANT_NAME,
				  CASE WHEN E.MEDICAL_LICENSE_NO IS NOT NULL THEN E.MEDICAL_LICENSE_NO ELSE '-' END AS CONSULTANT_NIK,
				  E.EMPNO AS EMPNO,
				  NS.CODE AS DIAGNOSIS_ICD_10_CODE,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.CODE ELSE '-' END AS PRIMARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.CODE ELSE '-' END AS SECONDARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.CODE ELSE '-' END AS CO_MORBID,
				  NS.DESCRIPTION AS DIAGNOSIS_ICD_10_DESCRIPTION,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.DESCRIPTION ELSE '-' END AS PRIMARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.DESCRIPTION ELSE '-' END AS SECONDARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.DESCRIPTION ELSE '-' END AS CO_MORBID_DESC
				FROM
					PROBLEM PR
				LEFT JOIN PROBLEMTRANSACTIONNAMESPACE PNM ON
					PNM.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN NAMESPACECODES NS ON
					(NS.CODE = PNM.NAMESPACE_CODE
					AND NS.NAMESPACEID = PNM.NAMESPACE_ID
					AND NS.ISACTIVE = 1)
				LEFT JOIN LOOKUPENTITY STATUS ON
					STATUS.LOOKUPID = PR.PROBLEM_STATUS
				LEFT JOIN NAMESPACES NSS ON
					(NSS.NAMESPACEID = NS.NAMESPACEID)
				LEFT JOIN LOOKUPENTITY STAGE ON
					STAGE.LOOKUPID = PNM.STAGE
				LEFT JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = PNM.TYPE
				INNER JOIN HISUSER U ON
					U.ID = PR.CREATEDBY
				LEFT JOIN LOOKUPENTITY PRTYPE ON
					PRTYPE.LOOKUPID = PR.PROBLEM_TYPE
				LEFT JOIN PROBLEM_MASTER PM ON
					PM.ID = PR.PROBLEM_MASTER_ID
				LEFT JOIN PROBLEM_APPLICABLE_ENCOUNTER PAE ON
					PAE.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PRM ON
					PRM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UNU ON
					UNU.ID = PR.UNCHARTEDBY
				LEFT JOIN EMPLOYEE UNE ON
					UNE.EMPLOYEE_ID = UNU.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UNPRM ON
					UNPRM.ID = UNE.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY PROBTYPE ON
					PROBTYPE.LOOKUPID = PR.PROBLEMTYPEID
				INNER JOIN VISIT V ON
				  V.PATIENT_ID = PR.PATIENTID AND V.VISITID = PR.VISITID
				WHERE V.SITE_ID = :branchId AND PR.PATIENTID = :patientId AND PR.ENCOUNTERID= :encounterId ORDER BY PR.ENCOUNTERID ASC]]>
	</sql-query>
	
	<sql-query name="getMedisPrimarySatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="CONSULTANT_NAME" type="string"/>
		<return-scalar column="CONSULTANT_NIK" type="string"/>
		<return-scalar column="EMPNO" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_CODE" type="string"/>
		<return-scalar column="PRIMARY" type="string"/>
		<return-scalar column="SECONDARY" type="string"/>
		<return-scalar column="CO_MORBID" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_DESCRIPTION" type="string"/>
		<return-scalar column="PRIMARY_DESC" type="string"/>
		<return-scalar column="SECONDARY_DESC" type="string"/>
		<return-scalar column="CO_MORBID_DESC" type="string"/>
		<![CDATA[SELECT
				  PR.ENCOUNTERID AS ENCOUNTER_ID,
				  U.USERNAME AS CONSULTANT_NAME,
				  CASE WHEN E.MEDICAL_LICENSE_NO IS NOT NULL THEN E.MEDICAL_LICENSE_NO ELSE '-' END AS CONSULTANT_NIK,
				  E.EMPNO AS EMPNO,
				  NS.CODE AS DIAGNOSIS_ICD_10_CODE,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.CODE ELSE '-' END AS PRIMARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.CODE ELSE '-' END AS SECONDARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.CODE ELSE '-' END AS CO_MORBID,
				  NS.DESCRIPTION AS DIAGNOSIS_ICD_10_DESCRIPTION,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.DESCRIPTION ELSE '-' END AS PRIMARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.DESCRIPTION ELSE '-' END AS SECONDARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.DESCRIPTION ELSE '-' END AS CO_MORBID_DESC
				FROM
					PROBLEM PR
				LEFT JOIN PROBLEMTRANSACTIONNAMESPACE PNM ON
					PNM.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN NAMESPACECODES NS ON
					(NS.CODE = PNM.NAMESPACE_CODE
					AND NS.NAMESPACEID = PNM.NAMESPACE_ID
					AND NS.ISACTIVE = 1)
				LEFT JOIN LOOKUPENTITY STATUS ON
					STATUS.LOOKUPID = PR.PROBLEM_STATUS
				LEFT JOIN NAMESPACES NSS ON
					(NSS.NAMESPACEID = NS.NAMESPACEID)
				LEFT JOIN LOOKUPENTITY STAGE ON
					STAGE.LOOKUPID = PNM.STAGE
				LEFT JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = PNM.TYPE
				INNER JOIN HISUSER U ON
					U.ID = PR.CREATEDBY
				LEFT JOIN LOOKUPENTITY PRTYPE ON
					PRTYPE.LOOKUPID = PR.PROBLEM_TYPE
				LEFT JOIN PROBLEM_MASTER PM ON
					PM.ID = PR.PROBLEM_MASTER_ID
				LEFT JOIN PROBLEM_APPLICABLE_ENCOUNTER PAE ON
					PAE.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PRM ON
					PRM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UNU ON
					UNU.ID = PR.UNCHARTEDBY
				LEFT JOIN EMPLOYEE UNE ON
					UNE.EMPLOYEE_ID = UNU.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UNPRM ON
					UNPRM.ID = UNE.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY PROBTYPE ON
					PROBTYPE.LOOKUPID = PR.PROBLEMTYPEID
				INNER JOIN VISIT V ON
				  V.PATIENT_ID = PR.PATIENTID AND V.VISITID = PR.VISITID
				WHERE V.SITE_ID = :branchId AND PR.PATIENTID = :patientId AND PR.ENCOUNTERID= :encounterId AND PNM.STAGE = '295256' ORDER BY PR.ENCOUNTERID ASC]]>
	</sql-query>
	
	<sql-query name="getMedisSecondarySatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="CONSULTANT_NAME" type="string"/>
		<return-scalar column="CONSULTANT_NIK" type="string"/>
		<return-scalar column="EMPNO" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_CODE" type="string"/>
		<return-scalar column="PRIMARY" type="string"/>
		<return-scalar column="SECONDARY" type="string"/>
		<return-scalar column="CO_MORBID" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_DESCRIPTION" type="string"/>
		<return-scalar column="PRIMARY_DESC" type="string"/>
		<return-scalar column="SECONDARY_DESC" type="string"/>
		<return-scalar column="CO_MORBID_DESC" type="string"/>
		<![CDATA[SELECT
				  PR.ENCOUNTERID AS ENCOUNTER_ID,
				  U.USERNAME AS CONSULTANT_NAME,
				  CASE WHEN E.MEDICAL_LICENSE_NO IS NOT NULL THEN E.MEDICAL_LICENSE_NO ELSE '-' END AS CONSULTANT_NIK,
				  E.EMPNO AS EMPNO,
				  NS.CODE AS DIAGNOSIS_ICD_10_CODE,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.CODE ELSE '-' END AS PRIMARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.CODE ELSE '-' END AS SECONDARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.CODE ELSE '-' END AS CO_MORBID,
				  NS.DESCRIPTION AS DIAGNOSIS_ICD_10_DESCRIPTION,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.DESCRIPTION ELSE '-' END AS PRIMARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.DESCRIPTION ELSE '-' END AS SECONDARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.DESCRIPTION ELSE '-' END AS CO_MORBID_DESC
				FROM
					PROBLEM PR
				LEFT JOIN PROBLEMTRANSACTIONNAMESPACE PNM ON
					PNM.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN NAMESPACECODES NS ON
					(NS.CODE = PNM.NAMESPACE_CODE
					AND NS.NAMESPACEID = PNM.NAMESPACE_ID
					AND NS.ISACTIVE = 1)
				LEFT JOIN LOOKUPENTITY STATUS ON
					STATUS.LOOKUPID = PR.PROBLEM_STATUS
				LEFT JOIN NAMESPACES NSS ON
					(NSS.NAMESPACEID = NS.NAMESPACEID)
				LEFT JOIN LOOKUPENTITY STAGE ON
					STAGE.LOOKUPID = PNM.STAGE
				LEFT JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = PNM.TYPE
				INNER JOIN HISUSER U ON
					U.ID = PR.CREATEDBY
				LEFT JOIN LOOKUPENTITY PRTYPE ON
					PRTYPE.LOOKUPID = PR.PROBLEM_TYPE
				LEFT JOIN PROBLEM_MASTER PM ON
					PM.ID = PR.PROBLEM_MASTER_ID
				LEFT JOIN PROBLEM_APPLICABLE_ENCOUNTER PAE ON
					PAE.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PRM ON
					PRM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UNU ON
					UNU.ID = PR.UNCHARTEDBY
				LEFT JOIN EMPLOYEE UNE ON
					UNE.EMPLOYEE_ID = UNU.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UNPRM ON
					UNPRM.ID = UNE.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY PROBTYPE ON
					PROBTYPE.LOOKUPID = PR.PROBLEMTYPEID
				INNER JOIN VISIT V ON
				  V.PATIENT_ID = PR.PATIENTID AND V.VISITID = PR.VISITID
				WHERE V.SITE_ID = :branchId AND PR.PATIENTID = :patientId AND PR.ENCOUNTERID= :encounterId AND PNM.STAGE = '295258' ORDER BY PR.ENCOUNTERID ASC]]>
	</sql-query>
	
	<sql-query name="getBillingSatuSehat">
		<return-scalar column="NO_INVOICE" type="string"/>
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="PLAN" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="GROUPID" type="long"/>
		<return-scalar column="GROUPCODE" type="string"/>
		<return-scalar column="GROUPNAME" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
				 	IMI.INVOICE_NO AS NO_INVOICE,
					TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL,      
				    IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					(SELECT LISTAGG(PPD.PLAN_NAME,' COB ')FROM INS_SPONSER_INVOICE SI INNER JOIN PLANDEFINITION PPD ON PPD.PLAN_ID = SI.PLAN_ID WHERE SI.MASTER_INV_ID = IMI.MASTER_INVOICE_ID) AS PLAN,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					G.GROUPID AS GROUPID,
				    COALESCE(G.GROUPCODE, '-') AS GROUPCODE,
				    COALESCE(G.GROUPNAME, 'GENERAL') AS GROUPNAME,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
							PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
						SO.ID = PCR.SRC_DOC_ID
						AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
				ORDER BY IMI.INVOICE_NO]]>
	</sql-query>
	
	<sql-query name="getListMedicationSatuSehat">
		<return-scalar column="NO_RESEP" type="string"/>
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="NAMA_OBAT" type="string"/>
		<return-scalar column="QUANTITY" type="string"/>
		<return-scalar column="INSTRUCTION" type="string"/>
		<return-scalar column="ORDERS_ID" type="long"/>
		<return-scalar column="MIXTURE" type="string"/>
		<return-scalar column="KODE_OBAT" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PRICE" type="string"/>
		<![CDATA[SELECT
					DISTINCT O.ORDER_NO AS NO_RESEP,
					CASE WHEN IH.CREATEDDT IS NOT NULL THEN TO_CHAR(IH.CREATEDDT ,'yyyy-MM-dd HH24:MI:SS') ELSE TO_CHAR(DO.ORDEREDDATE ,'yyyy-MM-dd HH24:MI:SS') END AS TANGGAL,
					CASE WHEN ITM.NAME IS NOT NULL THEN ITM.NAME ELSE DO.ACTIVE_DRUG END AS NAMA_OBAT,
					COALESCE(ID.ISSUED_QTY,DO.QUANTITY) AS QUANTITY,
					DO.INSTRUCTION AS INSTRUCTION,
					DO.ORDERS_ID AS ORDERS_ID,
					CASE WHEN DO.ISMIXTURE ='1' THEN 'Y' ELSE 'N' END AS MIXTURE,
					ITM.CODE AS KODE_OBAT,
					O.ENCOUNTER_ID AS ENCOUNTER_ID,
					ROUND(ID.ISSUED_QTY * IBD.UNIT_PRICE) AS PRICE
				FROM		
			 		ORDERS O 
			 	INNER JOIN VISIT V ON
					V.PATIENT_ID = O.PATIENT_ID AND V.VISITID = O.VISIT_ID
         		INNER JOIN DRUGORDER DO ON
					DO.ORDERS_ID = O.ORDER_ID
				LEFT JOIN ISSUEDETAIL ID ON
					ID.DRUGORDER_ID = DO.ORDERID
		        LEFT JOIN ITEM ITM ON
					ITM.ID = ID.ITEM
		        LEFT JOIN ISSUEHEADER IH ON
					IH.TRANSACTION_ID = ID.ISSUEHEADER_ID
				LEFT JOIN ISSUEBATCHDETAIL IBD ON
					(IBD.ISSUEDETAIL_ID = ID.DETAIL_ID)
				WHERE TRUNC(V.VISIT_DATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD'))
		         	AND V.SITE_ID = :branchId
				    AND V.PATIENT_ID = :patientId
	              	AND O.ENCOUNTER_ID= :encounterId
	              	AND DO.MIXTUREID IS NULL]]>
	</sql-query>
	
	<sql-query name="getListMixtureSatuSehat">
		<return-scalar column="NAMA_OBAT" type="string"/>
		<return-scalar column="QUANTITY" type="string"/>
		<return-scalar column="INSTRUCTION" type="string"/>
		<return-scalar column="KODE_OBAT" type="string"/>
		<return-scalar column="PRICE" type="string"/>
		<![CDATA[SELECT
					ITM.NAME AS NAMA_OBAT,
					ID.ISSUED_QTY AS QUANTITY,
					DO.INSTRUCTION AS INSTRUCTION,
					ITM.CODE AS KODE_OBAT,
					ROUND(ID.ISSUED_QTY * IBD.UNIT_PRICE) AS PRICE
				FROM
					DRUGORDER DO
					INNER JOIN ISSUEDETAIL ID ON
						ID.DRUGORDER_ID = DO.ORDERID
         			INNER JOIN ITEM ITM ON
						ITM.ID = ID.ITEM
					LEFT JOIN ISSUEHEADER IH ON
						IH.TRANSACTION_ID = ID.ISSUEHEADER_ID
					LEFT JOIN ISSUEBATCHDETAIL IBD ON
						(IBD.ISSUEDETAIL_ID = ID.DETAIL_ID)
				WHERE
					DO.ORDERS_ID = :ordersId
					AND DO.ISMIXTURE = '0'
					AND DO.MIXTUREID IS NOT NULL]]>
	</sql-query>
	
	<sql-query name="getListMedicationServiceSatuSehat">
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
            		TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL, 
					IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
					PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = PCR.SRC_DOC_ID
					AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
				ORDER BY IMI.INVOICE_NO]]>
	</sql-query>
	
	<sql-query name="getListMedicationServicePemeriksaanPenunjangSatuSehat">
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
            		TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL, 
					IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
					PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = PCR.SRC_DOC_ID
					AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
					AND G.GROUPNAME IN ('RADIOLOGI','LABORATORIUM')
				ORDER BY IMI.INVOICE_NO]]>
	</sql-query>
	
	<sql-query name="getListMedicationServiceTindakanSatuSehat">
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
            		TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL, 
					IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
					PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = PCR.SRC_DOC_ID
					AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
					AND G.GROUPNAME NOT IN ('RADIOLOGI','LABORATORIUM')
				ORDER BY IMI.INVOICE_NO]]>
	</sql-query>
	
	<sql-query name="getListLabResultSatuSehat">
		<return-scalar column="NO_ORDER" type="string"/>
		<return-scalar column="TANGGAL_PEMERIKSAAN" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="NILAI_NORMAL" type="string"/>
		<return-scalar column="RESULT" type="string"/>
		<return-scalar column="SATUAN" type="string"/>
		<return-scalar column="CERTIFIED_DATE" type="string"/>
		<return-scalar column="CERTIFIYNG_CONSULTANT_BPJS_CODE" type="string"/>
		<return-scalar column="CERTIFYING_CONSULTANT_NAME" type="string"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PRICE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DESCRIPTION" type="string"/>
		<return-scalar column="CERTIFYING_EMPLOYEE_CODE" type="string"/>
		<return-scalar column="PARAMETER" type="string"/>
		<return-scalar column="LAB_RESULT_ID" type="string"/>
		<![CDATA[SELECT
					 DISTINCT ORD.ORDER_NO AS NO_ORDER,
					 TO_CHAR(LR.GENERATED_DATE ,'YYYY-MM-DD HH24:MI:SS') AS TANGGAL_PEMERIKSAAN,
					 SM.SERVICE_NAME AS SERVICE_NAME,
					 LR.REFERENCE_RANGE AS NILAI_NORMAL,
					 LR.RESULT_VALUE AS RESULT,
				     LR.UNIT SATUAN,
				     TO_CHAR(LR.CERTIFIED_DATE ,'YYYY-MM-DD HH24:MI:SS')AS CERTIFIED_DATE,
					 E.LICENSE_NUMBER AS CERTIFIYNG_CONSULTANT_BPJS_CODE,
				     E.EMPLOYEE_NAME AS CERTIFYING_CONSULTANT_NAME,
				     SM.SERVICE_CODE AS SERVICE_CODE,
				     B.ENCOUNTER_ID,
				     CEIL(SO.BASE_PRICE) AS PRICE,
				     SP.CODE AS CODE,
				     SP.DESCRIPTION AS DESCRIPTION,
				     E.EMPNO AS CERTIFYING_EMPLOYEE_CODE,
				     CASE WHEN TYPE.LOOKUPVALUE = 'PARAMETER' THEN 'Y' ELSE 'N' END AS PARAMETER,
				     LAB_RESULT_ID
				FROM
					VISIT V
				JOIN ENCOUNTER B ON
					B.PATIENTID = V.PATIENT_ID AND B.ENCOUNTER_FK = V.VISITID
				INNER JOIN ORDERS O ON
					O.VISIT_ID = V.VISITID
				INNER JOIN LABORDER LO ON
					LO.VISIT_ID = V.VISITID
				INNER JOIN LABRESULT LR ON
					LR.LAB_ORDER_ID = LO.LAB_ORDER_ID
				INNER JOIN LABSERVICEMASTER LM ON
					LM.LAB_SERVICE_ID = LR.LAB_SERVICE_MASTER_ID
				INNER JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = LM.SERVICE_ID
				INNER JOIN EMPLOYEE E ON
					LR.CERTIFIEDEMPID = E.EMPLOYEE_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = LO.SERVICE_ORDER_ID
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN LABSERVICE_SPECIMEN_MAP LSSM ON LSSM.LAB_SERVICE_ID   =LM.LAB_SERVICE_ID AND LSSM.ACTIVE='Y'
        		LEFT OUTER JOIN SPECIMEN SP ON LSSM.SPECIMEN_ID=SP.ID
        		INNER JOIN LOOKUPENTITY TYPE ON TYPE.LOOKUPID = LM.RESULT_TYPE
				WHERE 
				--TRUNC(V.VISIT_DATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD')) 
					V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND B.ENCOUNTER_ID = :encounterId
					AND LR.CERTIFIED_DATE IS NOT NULL
				ORDER BY
					LR.LAB_RESULT_ID]]>
	</sql-query>
	
	<sql-query name="getLabResultParameterSatuSehat">
		<return-scalar column="PARAMETERNAME" type="string"/>
		<return-scalar column="UNIT" type="string"/>
		<return-scalar column="RESULTRANGE" type="string"/>
		<return-scalar column="RESULTVALUE" type="string"/>
		<return-scalar column="PARAMSERVICE" type="string"/>
		<![CDATA[SELECT
				    COALESCE(IP.INVESTIGATIONPARAMETERNAME, SM.SERVICE_NAME)AS PARAMETERNAME,
				    CASE WHEN LRP.LAB_RESULT_PARAMETER_ID IS NULL THEN LR.UNIT ELSE LRP.UNIT END AS UNIT,
					LRP.RESULTRANGE AS RESULTRANGE,
					LRP.RESULTVALUE AS RESULTVALUE,
					SM.SERVICE_NAME AS PARAMSERVICE
				FROM
					SERVICEORDER SO
				INNER JOIN ORDERS O ON
					O.ORDER_ID = SO.ORDERS_ID
				INNER JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = SO.SERVICE_ID
				INNER JOIN LABSERVICEMASTER LSM ON
					LSM.SERVICE_ID = SM.SERVICE_MASTER_ID
				INNER JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = LSM.RESULT_TYPE
				LEFT OUTER JOIN SERVICEMASTER SMPR ON
					SMPR.SERVICE_MASTER_ID = SO.PROFILE_ID
				LEFT OUTER JOIN LABORDER LO ON
					LO.SERVICE_ORDER_ID = SO.ID
				LEFT OUTER JOIN LABRESULT LR ON
					LR.LAB_ORDER_ID = LO.LAB_ORDER_ID
				LEFT OUTER JOIN LABRESULTPARAMETER LRP ON
					LRP.LAB_RESULT_ID = LR.LAB_RESULT_ID
				LEFT JOIN INVESTIGATIONPARAMETER IP ON
					(IP.INVESTIGATION_PARAMETER_ID = LRP.PARAMETER_ID)
				LEFT OUTER JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = LR.CERTIFIEDEMPID
				LEFT OUTER JOIN PREFIX_MASTER EMPPF ON
					EMPPF.ID = E.EMP_PREFIX
				LEFT OUTER JOIN HISDEPARTMENT D ON
					D.DEPARTMENT_ID = E.DEPARTMENT_ID
				LEFT OUTER JOIN ORGSTRUCTURE CO ON
					CO.ID = D.SITEID
				LEFT OUTER JOIN SERVICECENTER SC ON
					SC.SERVICE_CENTER_ID = LO.SERVICE_CENTER_ID
				WHERE
					SM.SERVICE_TYPE = 115
					AND SM.SERVICE_CATEGORY != 114
					AND LR.RESULT_STATUS IN (302, 304)
					AND LSM.RESULT_TYPE = 1099
					AND LR.LAB_RESULT_ID = :labresultId
				ORDER BY
					LSM.ORDERBY,
					IP.PARAMETERSEQUENCE ASC
		]]>
	</sql-query>
	
	<sql-query name="getListRadiologyResultSatuSehat">
		<return-scalar column="ORDER_NO" type="string"/>
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="REPORTDATA" type="string"/>
		<return-scalar column="CERTIFIYNG_CONSULTANT_BPJS_CODE" type="string"/>
		<return-scalar column="CERTIFYING_CONSULTANT_NAME" type="string"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PRICE" type="string"/>
		<return-scalar column="CERTIFYING_EMPLOYEE_CODE" type="string"/>
		<![CDATA[SELECT
					O.ORDER_NO AS ORDER_NO,
					TO_CHAR(SCO.CREATEDDT, 'YYYY-MM-DD HH24:MI:SS') AS TANGGAL,
					SM.SERVICE_NAME AS SERVICE_NAME,
					SCO.REPORTDATA REPORTDATA,
					E.LICENSE_NUMBER AS CERTIFIYNG_CONSULTANT_BPJS_CODE,
					E.EMPLOYEE_NAME AS CERTIFYING_CONSULTANT_NAME,
					SM.SERVICE_CODE AS SERVICE_CODE,
					B.ENCOUNTER_ID AS ENCOUNTER_ID,
					CEIL(SO.BASE_PRICE) AS PRICE,
					E.EMPNO AS CERTIFYING_EMPLOYEE_CODE
				FROM
					VISIT V
				JOIN ENCOUNTER B ON
					B.PATIENTID = V.PATIENT_ID AND B.ENCOUNTER_FK = V.VISITID
				INNER JOIN ORDERS O ON
					O.VISIT_ID = V.VISITID
				INNER JOIN SERVICEORDER SO ON
					SO.ORDERS_ID = O.ORDER_ID
        		INNER JOIN SERVICEMASTER SM ON 
        			SM.SERVICE_MASTER_ID = SO.SERVICE_ID
				INNER JOIN SERVICECENTERORDER SC ON
					SC.SERVICEORDER = SO.ID
				INNER JOIN SERVICECENTERORDERRESULT SCO ON
					SCO.REPORTNUMBER = SC.REPORTNUMBER
				INNER JOIN EMPLOYEE E ON
					SO.RENDERED_EMPLOYEE = E.EMPLOYEE_ID
				WHERE 
				--TRUNC(V.VISIT_DATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD')) 
				    V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND B.ENCOUNTER_ID = :encounterId
				ORDER BY
					SCO.ID
				]]>
	</sql-query>
	
	
	<sql-query name="getvitalSignSatuSehat">
		<return-scalar column="DESCRIPTION" type="string"/>
		<return-scalar column="CODE_VITALSIGN" type="string"/>
		<return-scalar column="VALUE_UNIT" type="string"/>
		<return-scalar column="VITAL_VALUE" type="string"/>
		<return-scalar column="EMPLOYEE_ID" type="string"/>
		<return-scalar column="EMPLOYEE_NAME" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					DISTINCT V.PARAMETER_VALUE AS DESCRIPTION,
					VP.PARAMETER_CODE AS CODE_VITALSIGN,
					U.CODE AS VALUE_UNIT,
					V.CURRENT_VALUE AS VITAL_VALUE,
					E.EMPNO AS EMPLOYEE_ID,
					E.EMPLOYEE_NAME AS EMPLOYEE_NAME,
					V.ENTERED_DATETIME AS TIMESTAMP 
				  FROM VITALSIGN V
				  INNER JOIN PATIENT P ON
					P.PATIENT_ID = V.PATIENT_ID
				  INNER JOIN VITALPARAMENTERS VP ON
					VP.PARAMETER_ID = V.PARAMETER_ID
				  INNER JOIN PARAMETERTOGRPMAP PP ON
					PP.PARAMETER_ID = V.PARAMETER_ID
				  INNER JOIN GROUPS G ON
					G.GROUPID = PP.GROUP_ID
				  INNER JOIN VISIT VT ON
					VT.VISITID = V.VISIT_ID
				  INNER JOIN ENCOUNTER ENC ON
					ENC.ENCOUNTER_FK = VT.VISITID
				  LEFT JOIN UOM U ON
					U.ID = VP.UOM
				  LEFT JOIN HISUSER HU ON
         		 	V.CREATEDBY = HU.ID
				  LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = HU.EMPLOYEE_ID
				WHERE
					--TRUNC(VT.VISIT_DATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD'))
					VT.SITE_ID = :branchId
					AND V.CURRENT_VALUE IS NOT NULL
					AND V.ACTIVE = 1
					AND G.ACTIVE = 1
					AND P.PATIENT_ID = :patientId
					AND ENC.ENCOUNTER_ID = :encounterId
				ORDER BY
					V.ENTERED_DATETIME DESC
		]]>
	</sql-query>
	
	<sql-query name="getListExaminationSatuSehat">
		<return-scalar column="QUESTIONNAME" type="string"/>
		<return-scalar column="QUESTIONANSWER" type="string"/>
		<return-scalar column="QUESTION_ANSWER_ID" type="string"/>
		<return-scalar column="CREATEDATE" type="string"/>
		<![CDATA[SELECT
					CO.DISPLAY_NAME AS QUESTIONNAME ,
					COALESCE(CA.QUESTION_ANSWER, TO_CLOB('-')) AS QUESTIONANSWER,
					CA.ID AS QUESTION_ANSWER_ID,
					TO_CHAR(CA.CREATEDDATETIME, 'DD-MM-YYYY HH24:MI') AS CREATEDATE
				FROM
					CLINICAL_ANSWER CA
				INNER JOIN FORMFIELD FF ON
					FF.ID = CA.QUESTION_ID
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_ID = FF.COMPONENTID
				INNER JOIN CONCEPT CO ON
					CO.ID = FF.FIELD_REFERENCE
				INNER JOIN HISUSER H ON
					H.ID = CA.CREATEDBY
				INNER JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = H.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PM ON
					PM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UH ON
					UH.ID = CA.UPDATEDBY
				LEFT JOIN EMPLOYEE UE ON
					UE.EMPLOYEE_ID = UH.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UPM ON
					UPM.ID = UE.EMP_PREFIX
				WHERE
					CA.PATIENT = :patientId
					AND SC.COMPONENT_CODE = 'EXAM'
					AND CA.ACTIVE = 1
					AND CA.UNCHARTEDBY IS NULL
					AND CA.VISIT = :visitId
				ORDER BY
					TRUNC(CA.CREATEDDATETIME) DESC,
					CA.CREATEDDATETIME ASC
		]]>
	</sql-query>
	
	<sql-query name="getAllergiSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PATIENT_ID" type="long"/>
		<return-scalar column="ALLERGY_ID" type="long"/>
		<return-scalar column="ALLERGY_CODE" type="string"/>
		<return-scalar column="ALLERGEN_NAME" type="string"/>
		<return-scalar column="ALLERGEN_CATEGORY" type="string"/>
		<return-scalar column="COLORCODE" type="string"/>
		<return-scalar column="SEVERITY" type="string"/>
		<return-scalar column="REMARKS" type="string"/>
		<return-scalar column="ONSETDATE" type="string"/>
		<return-scalar column="CREATEDBY" type="string"/>
		<![CDATA[SELECT
					ALLERGYREC0_.ENCOUNTER_ID,
					PATIENT1_.PATIENT_ID,
					ALLERGYREC0_.ALLERGY_ID AS ALLERGY_ID,
					ALLERGEN3_.ALLERGEN_CODE AS ALLERGY_CODE,
					ALLERGEN3_.ALLERGEN_DESC AS ALLERGEN_NAME,
					LOOKUPENTI3_.LOOKUPVALUE AS ALLERGEN_CATEGORY,
					LOOKUPENTI5_.COLORCODE AS COLORCODE,
					LOOKUPENTI5_.LOOKUPVALUE AS SEVERITY,
					ALLERGYREC0_.CURRENT_REMARKS AS REMARKS,
					ALLERGYREC0_.ONSETDATE AS ONSETDATE,
					ENTERPRISE6_.USERNAME AS CREATEDBY
				FROM
					ALLERGYRECORDING ALLERGYREC0_
				INNER JOIN PATIENT PATIENT1_ ON
					ALLERGYREC0_.PATIENT_ID = PATIENT1_.PATIENT_ID
				LEFT OUTER JOIN DRUGGENERICS DRUGGENERI2_ ON
					ALLERGYREC0_.DRUG_GENERIC_ID = DRUGGENERI2_.DRUG_GEN_ID
				LEFT OUTER JOIN ALLERGEN ALLERGEN3_ ON
					ALLERGYREC0_.ALLERGEN = ALLERGEN3_.ALLERGEN_ID
				LEFT OUTER JOIN LOOKUPENTITY LOOKUPENTI3_ ON
					ALLERGEN3_.ALLERGICTYPE_ID  = LOOKUPENTI3_.LOOKUPID
				LEFT OUTER JOIN LOOKUPENTITY LOOKUPENTI4_ ON
					ALLERGYREC0_.STATUS = LOOKUPENTI4_.LOOKUPID
				LEFT OUTER JOIN LOOKUPENTITY LOOKUPENTI5_ ON
					ALLERGYREC0_.SEVERITY = LOOKUPENTI5_.LOOKUPID,
					HISUSER ENTERPRISE6_
				where
					ALLERGYREC0_.SITE_ID = :branchId
					AND PATIENT1_.PATIENT_ID = :patientId
					AND ALLERGYREC0_.ENCOUNTER_ID = :encounterId
					AND ENTERPRISE6_.ID = ALLERGYREC0_.CREATEDBY
				ORDER BY
					ALLERGYREC0_.RECORDED_DATE DESC
				]]>
	</sql-query>
	
	<sql-query name="getDietSatuSehat">
		<return-scalar column="DIETNOTE" type="string"/>
		<return-scalar column="DATETIMEINPUT" type="string"/>
		<return-scalar column="CREATEDBY" type="string"/>
		<return-scalar column="SITE_ID" type="string"/>
		<![CDATA[SELECT
					DC.NAME AS DIETNOTE,
					TO_CHAR(D.CREATEDDATETIME, 'DD-MM-YYYY HH:MI:SS') AS DATETIMEINPUT,
					H.USERNAME AS CREATEDBY,
					V.SITE_ID AS SITE_ID
				FROM
					DIETPRESCRIPTION D
				LEFT JOIN DIET_ORDER DO ON
					DO.PRESCRIPTION = D.ID
				INNER JOIN DIETCONFIGURATION DC ON
					DC.ID = D.DIETTYPE
				INNER JOIN HISUSER H ON
					H.ID = D.CREATEDBY
				LEFT JOIN HISUSER HI ON
					HI.ID = D.UPDATEDBY
				LEFT JOIN VISIT V ON
					V.PATIENT_ID = D.PATIENT
					AND V.VISITID = D.VISIT
				WHERE
					V.SITE_ID = :branchId
					AND D.PATIENT = :patientId
					AND DC.ISACTIVE = 1
				ORDER BY
					D.CREATEDDATETIME DESC
				]]>
	</sql-query>
	
	<sql-query name="getclinicalNoteSatuSehat">
		<return-scalar column="ENCOUNTERID" type="long"/>
		<return-scalar column="SUBJECTIVE" type="string"/>
		<return-scalar column="OBJECTIVE" type="string"/>
		<return-scalar column="ASSESMENT" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="PUBLISHED" type="string"/>
		<return-scalar column="ADDENDUM" type="string"/>
		<return-scalar column="EMPNAME" type="string"/>
		<return-scalar column="SITE_ID" type="string"/>
		<return-scalar column="DATETIMEINPUT" type="string"/>
		<![CDATA[SELECT
					CN.ENCOUNTERID,
					CN.NOTE AS SUBJECTIVE,
					CN.NOTE AS OBJECTIVE,
					SC.COMPONENT_NAME AS ASSESMENT,
					CN.SECTION_CODE AS CODE,
					CNA.ISPUBLISHED AS PUBLISHED,
					CNA.ADDENDUM AS ADDENDUM,
					PF.PREFIX || ' ' || EMP.EMPLOYEE_NAME AS EMPNAME,
					V.SITE_ID AS SITE_ID,
					TO_CHAR(CN.CREATEDDATETIME, 'YYYY-MM-DD HH24:MI') AS DATETIMEINPUT
				FROM
					CLINICAL_NOTE CN
				INNER JOIN HISUSER U ON
					U.ID = CN.CREATEDBY
				INNER JOIN EMPLOYEE EMP ON
					EMP.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PF ON
					PF.ID = EMP.EMP_PREFIX
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_CODE = CN.SECTION_CODE
				LEFT JOIN CLINICAL_NOTE_ADDENDUM CNA ON
					CNA.CLINICAL_NOTE_ID = CN.ID
				LEFT JOIN VISIT V ON
					V.PATIENT_ID = CN.PATIENTID
					AND V.VISITID = CN.VISITID
				WHERE
					V.SITE_ID = :branchId
					AND CN.PATIENTID = :patientId
					AND CN.NOTE_TYPE = 'CHAT'
					AND CN.ENCOUNTERID = :encounterId
					AND CN.IS_ACTIVE = 1
				ORDER BY
					SC.SORTORDER ASC,
					CN.CREATEDDATETIME
				]]>
	</sql-query>
	
	<sql-query name="getconsultantNoteSatuSehat">
		<return-scalar column="NAMAPASIEN" type="string"/>
		<return-scalar column="NOREKAMMEDIS" type="string"/>
		<return-scalar column="NAMAKELUARGA" type="string"/>
		<return-scalar column="TANGGALLAHIR" type="string"/>
		<return-scalar column="JENISKELAMIN" type="string"/>
		<return-scalar column="TANGGALMASUKRS" type="string"/>
		<return-scalar column="KELASKAMAR" type="string"/>
		<return-scalar column="WAKTUTANGGALPASIENTIBADIRUANGAN" type="string"/>
		<return-scalar column="WAKTUTANGGALPASIENMULAIASSESMEN" type="string"/>
		<return-scalar column="KELUHANUTAMA" type="string"/>
		<return-scalar column="RIWAYATPENYAKITSEKARANG" type="string"/>
		<return-scalar column="RIWAYATPENYAKITKELUARGA" type="string"/>
		<return-scalar column="RIWAYATPENYAKITDAHULU" type="string"/>
		<return-scalar column="RIWAYATPEKERJAAN" type="string"/>
		<return-scalar column="RIWAYATALERGI" type="string"/>
		<return-scalar column="RIWAYATMINUMOBAT" type="string"/>
		<return-scalar column="OBATYANGSEDANGDIKONSUMSI" type="string"/>
		<return-scalar column="KEADAANUMUM" type="string"/>
		<return-scalar column="KESADARAN" type="string"/>
		<return-scalar column="GCS" type="string"/>
		<return-scalar column="TANDAVITAL" type="string"/>
		<return-scalar column="PEMERIKSAANSTATUSGENERALIS" type="string"/>
		<return-scalar column="PEMERIKSAANPENUNJANG" type="string"/>
		<return-scalar column="DIAGNOSISKERJA" type="string"/>
		<return-scalar column="DIAGNOSISBANDING" type="string"/>
		<return-scalar column="PERMASALAHANMEDIS" type="string"/>
		<return-scalar column="RENCANAASUHANDANTERAPI" type="string"/>
		<return-scalar column="KOLABORASIKONSULTASI" type="string"/>
		<return-scalar column="JENISTERAPI" type="string"/>
		<return-scalar column="TERAPI" type="string"/>
		<return-scalar column="TINDAKAN" type="string"/>
		<return-scalar column="KONSULTASI" type="string"/>
		<return-scalar column="PEMERIKSAANPENUNJANGLANJUTAN" type="string"/>
		<return-scalar column="HASILYANGDIHARAPKAN" type="string"/>
		<return-scalar column="EDUKASIAWAL" type="string"/>
		<return-scalar column="RENCANAPULANG" type="string"/>
		<return-scalar column="TANGGALDANWAKTUSELESAIASSESMEN" type="string"/>
		<![CDATA[SELECT
					PT.PATIENTNAME AS NAMAPASIEN,
					PT.MRNO AS NOREKAMMEDIS,
					GI.GUARANTORNAME AS NAMAKELUARGA,
					TO_CHAR(PT.DOB, 'DD-MM-YYYY') AS TANGGALLAHIR,
					LE.LOOKUPVALUE AS JENISKELAMIN,
					TO_CHAR(VT.VISIT_DATE , 'DD-MM-YYYY HH:MI:SS') AS TANGGALMASUKRS,
					BT.BEDTYPENAME AS KELASKAMAR,
					TO_CHAR(CPD.EVENT_FROM_DATE ,'YYYY-MM-DD HH:MI:SS') AS WAKTUTANGGALPASIENTIBADIRUANGAN,
					TO_CHAR(IP.LASTPOSTEDBEDCHARGE ,'YYYY-MM-DD HH:MI:SS') AS WAKTUTANGGALPASIENMULAIASSESMEN,
					CN.NOTE AS KELUHANUTAMA,
					CN.NOTE AS RIWAYATPENYAKITSEKARANG,
					FH.REMARKS AS RIWAYATPENYAKITKELUARGA,
					CN.NOTE AS RIWAYATPENYAKITDAHULU,
					'-' AS RIWAYATPEKERJAAN,
					'' AS RIWAYATALERGI,
					'-' AS RIWAYATMINUMOBAT,
					'-' AS OBATYANGSEDANGDIKONSUMSI,
					'-' AS KEADAANUMUM,
					'-' AS KESADARAN,
					'-' AS GCS,
					'' AS TANDAVITAL,
					'' AS PEMERIKSAANSTATUSGENERALIS,
					'' AS PEMERIKSAANPENUNJANG,
					'' AS DIAGNOSISKERJA,
					'' AS DIAGNOSISBANDING,
					'' AS PERMASALAHANMEDIS,
					'-' AS RENCANAASUHANDANTERAPI,
					'-' AS KOLABORASIKONSULTASI,
					'-' AS JENISTERAPI,
					'' AS TERAPI,
					'' AS TINDAKAN,
					'' AS KONSULTASI,
					'' AS PEMERIKSAANPENUNJANGLANJUTAN,
					'-' AS HASILYANGDIHARAPKAN,
					'-' AS EDUKASIAWAL,
					'-' AS RENCANAPULANG,
					TO_CHAR(CPD.EVENT_TO_DATE , 'DD-MM-YYYY HH:MI:SS') AS TANGGALDANWAKTUSELESAIASSESMEN
				FROM
					CONSULTATION_PATIENT_DETAILS CPD
				INNER JOIN PATIENT PT ON
					PT.PATIENT_ID = CPD.PATIENTID
				LEFT JOIN VISIT VT ON
					VT.VISITID = CPD.VISITID
				INNER JOIN HISDEPARTMENT HD ON
					HD.DEPARTMENT_ID = CPD.DEPTID
				LEFT JOIN LOOKUPENTITY LE ON
					(PT.GENDERID = LE.LOOKUPID)
				LEFT JOIN PATIENTADMISSION AP ON
					AP.VISITID = VT.VISITID
				LEFT JOIN BEDTYPE BT ON
					BT.BED_TYPE_ID  = AP.BEDTYPEID 
				LEFT JOIN CLINICAL_NOTE CN ON
					 CN.PATIENTID = CPD.PATIENTID AND CN.VISITID = CPD.VISITID AND CN.ISPUBLISHED='1'
				LEFT JOIN FAMILYHISTORY FH ON
					FH.VISITID = CPD.VISITID
					AND FH.PATIENTID = CPD.PATIENTID
				LEFT JOIN GUARANTORINFORMATION GI ON 
					GI.SRCDOCID = CN.PATIENTID
				LEFT JOIN INPATIENTS IP ON IP.PATIENT  = CPD.PATIENTID AND IP.VISITID = CPD.VISITID
				WHERE
					CPD.PATIENTID = :patientId
					AND CPD.VISITID = :visitId
				]]>
	</sql-query>
	
	
	<sql-query name="getListCrossConsultationSatuSehat">
		<return-scalar column="CONSULTATION_TYPE" type="string"/>
		<return-scalar column="DOCTOR_NAME" type="string"/>
		<![CDATA[SELECT
					CASE WHEN CCT.CCT_NAME IS NOT NULL THEN CCT.CCT_NAME ELSE 'Cross Consultation' END AS CONSULTATION_TYPE,
					EMP.EMPLOYEE_NAME AS DOCTOR_NAME
				FROM CROSS_CONSULTATION_REQ CCR 
		        LEFT JOIN EMPLOYEE EMP ON EMP.EMPLOYEE_ID = CCR.CONSULTANT_ID
		        LEFT JOIN CROSSCONSULTANT_TYPES CCT ON CCT.CCT_ID = CCR.CROSSCONSULT_TYPE
				WHERE
					CCR.SITE_ID = :branchId AND CCR.PATIENTID = :patientId AND CCR.VISIT = :visitId
				]]>
	</sql-query>
	
	<sql-query name="getListRiwayatPenyakitKeluargaSatuSehat">
		<return-scalar column="RELATION" type="string"/>
		<return-scalar column="DESCRIPTION" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					RELATION.LOOKUPVALUE AS RELATION,
					FAMILYHIST0_.REMARKS AS DESCRIPTION,
					TO_CHAR(FAMILYHIST0_.CREATEDDT, 'MON DD,YYYY HH:MI:SS AM') AS TIMESTAMP
				FROM
					FAMILYHISTORY FAMILYHIST0_
				INNER JOIN PATIENT P ON
					P.PATIENT_ID = FAMILYHIST0_.PATIENTID
				INNER JOIN HISUSER H ON
					H.ID = FAMILYHIST0_.CREATEDBY
				INNER JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = H.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PM ON
					PM.ID = E.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY RELATION ON
					RELATION.LOOKUPID = FAMILYHIST0_.RELATIONID
				WHERE
					(FAMILYHIST0_.PROTOCOL_ID IS NULL)
					AND FAMILYHIST0_.PATIENTID = :patientId
					AND FAMILYHIST0_.VISITID = :visitId
					AND FAMILYHIST0_.UNCHARTEDBY IS NULL
				ORDER BY
					FAMILYHIST0_.CREATEDDT DESC
				]]>
	</sql-query>
	
	<sql-query name="getListRiwayatPenyakitDahuludanSekarangSatuSehat">
		<return-scalar column="RIWAYAT_DAHULU" type="string"/>
		<return-scalar column="RIWAYAT_SEKARANG" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					CQ.QUESTION_TEXT AS RIWAYAT_DAHULU,
					COALESCE(CA.QUESTION_ANSWER, TO_CLOB('-')) AS RIWAYAT_SEKARANG,
					TO_CHAR(CA.CREATEDDATETIME, 'MON DD,YYYY HH:MI:SS AM') AS TIMESTAMP
				FROM
					CLINICAL_ANSWER CA
				INNER JOIN PATIENT P ON
					P.PATIENT_ID = CA.PATIENT
				INNER JOIN CCHPI_QUESTIONS CQ ON
					CQ.ANSWER_ID = CA.ID
				INNER JOIN FORMFIELD FF ON
					FF.ID = CA.QUESTION_ID
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_ID = FF.COMPONENTID
				INNER JOIN CONCEPT CO ON
					CO.ID = FF.FIELD_REFERENCE
				WHERE
					CA.ACTIVE = 1
					AND SC.COMPONENT_CODE = 'CC_HPI'
					AND CA.PATIENT = :patientId
					AND CA.VISIT = :visitId
				ORDER BY
					CA.CREATEDDATETIME DESC
				]]>
	</sql-query>
	
	<sql-query name="getListRiwayatPenyakitDahuluSatuSehat">
		<return-scalar column="RIWAYAT_DAHULU" type="string"/>
		<return-scalar column="RIWAYAT_SEKARANG" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					CQ.QUESTION_TEXT AS RIWAYAT_DAHULU,
					COALESCE(CA.QUESTION_ANSWER, TO_CLOB('-')) AS RIWAYAT_SEKARANG,
					TO_CHAR(CA.CREATEDDATETIME, 'MON DD,YYYY HH:MI:SS AM') AS TIMESTAMP
				FROM
					CLINICAL_ANSWER CA
				INNER JOIN PATIENT P ON
					P.PATIENT_ID = CA.PATIENT
				INNER JOIN CCHPI_QUESTIONS CQ ON
					CQ.ANSWER_ID = CA.ID
				INNER JOIN FORMFIELD FF ON
					FF.ID = CA.QUESTION_ID
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_ID = FF.COMPONENTID
				INNER JOIN CONCEPT CO ON
					CO.ID = FF.FIELD_REFERENCE
				WHERE
					CA.ACTIVE = 1
					AND SC.COMPONENT_CODE = 'PMH'
					AND CA.PATIENT = :patientId
					AND CA.VISIT = :visitId
				ORDER BY
					CA.CREATEDDATETIME DESC
				]]>
	</sql-query>
	
	<!-- End Filter Branch -->
	
	
	<!-- Filter Branch -->
	<sql-query name="getPatientDischargeIPSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="string"/>
		<return-scalar column="PATIENT_ID" type="string"/>
		<return-scalar column="VISITID" type="string"/>
		<![CDATA[SELECT 
          			DISTINCT EN.ENCOUNTER_ID AS ENCOUNTER_ID,
					V.PATIENT_ID AS PATIENT_ID,
					V.VISITID AS VISITID 
		        FROM INS_MASTER_INVOICE MASTERINV
		        INNER JOIN VISIT V ON V.VISITID = MASTERINV.VISIT_ID
		        INNER JOIN ENCOUNTER EN ON EN.ENCOUNTER_FK = MASTERINV.VISIT_ID
		        WHERE MASTERINV.CREATEDDATETIME BETWEEN TO_DATE(:startdate, 'YYYY-MM-DD HH24:MI') AND TO_DATE(:enddate, 'YYYY-MM-DD HH24:MI') 
		        AND MASTERINV.HOSPITAL_ID = :branchid
		        AND MASTERINV.INVOICE_STATUS ='Settled'
		        AND V.VISIT_PATSTATUS = '391'
		        AND EN.ENCOUNTERTYPE NOT IN ('578')
        		ORDER BY
					EN.ENCOUNTER_ID
				]]>
	</sql-query>
	
	<sql-query name="getPatientIPSatuSehat">
		<return-scalar column="REGISTRATIONDATE" type="string"/>
		<return-scalar column="PATIENT_ID" type="long"/>
		<return-scalar column="PATIENTNAME" type="string"/>
		<return-scalar column="MRNO" type="string"/>
		<return-scalar column="GENDER" type="string"/>
		<return-scalar column="DOB" type="string"/>
		<return-scalar column="NIK" type="string"/>
		<return-scalar column="POLICYNO" type="string"/>
		<return-scalar column="MOBILENO" type="string"/>
		<return-scalar column="MARTIAL_STATUS" type="string"/>
		<return-scalar column="ADDRESS" type="string"/>
		<return-scalar column="STATE" type="string"/>
		<return-scalar column="DISTRICT" type="string"/>
		<return-scalar column="CITY" type="string"/>
		<return-scalar column="VILLAGE" type="string"/>
		<return-scalar column="PIN" type="string"/>
		<![CDATA[SELECT 
				    A.REGISTRATIONDATE AS REGISTRATIONDATE,
				    A.PATIENT_ID AS PATIENT_ID,
				    A.PATIENTNAME AS PATIENTNAME,
				    A.MRNO AS MRNO,
				    D.LOOKUPVALUE AS GENDER,
				    TO_CHAR(A.DOB, 'YYYY-MM-DD') AS DOB,
				    CASE WHEN C.IDENTITY_TYPE ='655085' THEN C.PATIDNO ELSE '-' END AS NIK,
				    B.POLICYNO AS POLICYNO,
				    A.MOBILENO AS MOBILENO,
				    E.LOOKUPVALUE AS MARTIAL_STATUS,
				    F.ADDRESS AS ADDRESS,
				    G.STATE_NAME AS STATE,
				    H.DISTRICT_NAME AS DISTRICT,
				    I.CITY_NAME AS CITY,  
				    J.VILLAGE_NAME AS VILLAGE,
				    F.PIN AS PIN
				FROM PATIENT A
				LEFT JOIN PATIENT_POLICY_DETAILS B ON (A.PATIENT_ID = B.PATIENT_ID)
				LEFT JOIN PLANDEFINITION PD ON (B.PLAN_ID = PD.PLAN_ID)
				LEFT JOIN GROUPS GPRS ON (PD.CAREPLANGROUP = GPRS.GROUPID AND GPRS.GROUPNAME='BPJS')
				LEFT JOIN PATIENT_IDENTIFICATION C ON (A.PATIENT_ID = C.PATIENT_ID)
				LEFT JOIN LOOKUPENTITY D ON (A.GENDERID = D.LOOKUPID)
				LEFT JOIN LOOKUPENTITY E ON (A.MARTIAL_STATUS = E.LOOKUPID)
				LEFT JOIN PATIENT_ADDRESS F ON F.PATIENT_ID = A.PATIENT_ID AND F.ACTIVE = '1'
				LEFT JOIN STATE G ON (F.STATE_ID = G.STATE_ID)
				LEFT JOIN DISTRICT H ON (F.DISTRICT_ID = H.DISTRICT_ID)
				LEFT JOIN CITYMASTER I ON (F.CITY = I.CITY_ID)
				LEFT JOIN VILLAGEMASTER J ON (F.VILLAGE = J.VILLAGE_ID)
				LEFT JOIN ELIGIBILITY ELG ON (ELG.PATIENTID = A.PATIENT_ID)
				WHERE A.PATIENT_ID = :patientId 
				ORDER BY A.REGISTRATIONDATE DESC
				FETCH FIRST 1 ROW ONLY]]>
	</sql-query>
	
	<sql-query name="getEncounterIPSatuSehat">
		<return-scalar column="ENCOUNTER_BRANCH_ID" type="long"/>
		<return-scalar column="VISIT_TYPE" type="string"/>
		<return-scalar column="VISIT_DATE" type="string"/>
		<return-scalar column="VISITID" type="long"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="ENCOUNTER_TYPE" type="string"/>
		<return-scalar column="ENCOUNTER_TIME" type="string"/>
		<return-scalar column="STARTCONSULTATION_DATETIME" type="string"/>
		<return-scalar column="ENDCONSULTATION_DATETIME" type="string"/>
		<return-scalar column="DEPARTMENT_NAME" type="string"/>
		<return-scalar column="DEPARTMENT_ID" type="long"/>
		<return-scalar column="UNITNAME" type="string"/>
		<return-scalar column="UNITID" type="long"/>
		<return-scalar column="MRNO" type="string"/>
		<return-scalar column="NOSEP" type="string"/>
		<![CDATA[SELECT
				    C.CODE AS ENCOUNTER_BRANCH_ID,
				    E.LOOKUPVALUE AS VISIT_TYPE,
				    TO_CHAR(V.VISIT_DATE, 'DD-MM-YYYY') AS VISIT_DATE,
				    V.VISITID AS VISITID,
				    A.ENCOUNTER_ID AS ENCOUNTER_ID,
				    F.LOOKUPVALUE AS ENCOUNTER_TYPE,
				    TO_CHAR(A.DATE_TIME ,'DD-MM-YYYY HH24:MI:SS') AS ENCOUNTER_TIME,
				    CASE WHEN A.STARTCONSULTATION_DATETIME IS NOT NULL THEN TO_CHAR(A.STARTCONSULTATION_DATETIME ,'YYYY-MM-DD HH24:MI:SS') ELSE TO_CHAR(SVL.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') END AS STARTCONSULTATION_DATETIME,
            		CASE WHEN A.ENDCONSULTATION_DATETIME IS NOT NULL THEN TO_CHAR(A.ENDCONSULTATION_DATETIME ,'YYYY-MM-DD HH24:MI:SS') ELSE TO_CHAR(SVL.ENDDATETIME ,'DD-MM-YYYY HH24:MI:SS') END AS ENDCONSULTATION_DATETIME,
				    H.DEPARTMENT_NAME AS DEPARTMENT_NAME,
				    H.DEPARTMENT_CODE AS DEPARTMENT_ID,
				    G.UNITNAME AS UNITNAME,
				    G.UNITID AS UNITID,
				    B.MRNO AS MRNO,
				    ELG.AUTHORIZATION_CODE AS NOSEP
				FROM
				    ENCOUNTER A
				INNER JOIN PATIENT B ON
				    (A.PATIENTID = B.PATIENT_ID)
				INNER JOIN VISIT V ON
				    (B.PATIENT_ID = V.PATIENT_ID AND A.ENCOUNTER_FK  = V.VISITID)
				INNER JOIN ORGSTRUCTURE C ON
				    (V.SITE_ID = C.ID)
				INNER JOIN LOOKUPENTITY E ON
				    (V.VISITTYPE = E.LOOKUPID)
				INNER JOIN LOOKUPENTITY F ON
				    (A.ENCOUNTERTYPE = F.LOOKUPID)
				LEFT JOIN UNITS G ON
				  (A.DEPT_FK = G.DEPARTMENTID AND A.UNITID = G.UNITID)
				INNER JOIN HISDEPARTMENT H ON
				  (A.DEPT_FK = H.DEPARTMENT_ID)
				LEFT JOIN PATIENT_POLICY_DETAILS PPD ON 
					(PPD.PATIENT_ID = B.PATIENT_ID AND PPD.ACTIVE = '1')
        		LEFT JOIN PLANDEFINITION PD ON 
        			(PPD.PLAN_ID = PD.PLAN_ID)
				LEFT JOIN GROUPS GPRS ON 
					(PD.CAREPLANGROUP = GPRS.GROUPID AND GPRS.GROUPNAME='BPJS')
				LEFT JOIN ELIGIBILITY ELG ON 
					(ELG.PATIENTID = V.PATIENT_ID AND ELG.VISITID = V.VISITID)
				LEFT OUTER JOIN PATIENT_VISIT_STATUS SVL ON SVL.ENCOUNTERID = A.ENCOUNTER_ID AND SVL.TYPE = 1
				WHERE V.SITE_ID = :branchId AND A.PATIENTID = :patientId AND A.ENCOUNTER_ID = :encounterId
				ORDER BY A.DATE_TIME DESC
				FETCH FIRST 1 ROW ONLY]]>
	</sql-query>
	
	<sql-query name="getMedisIPSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="CONSULTANT_NAME" type="string"/>
		<return-scalar column="CONSULTANT_NIK" type="string"/>
		<return-scalar column="EMPNO" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_CODE" type="string"/>
		<return-scalar column="PRIMARY" type="string"/>
		<return-scalar column="SECONDARY" type="string"/>
		<return-scalar column="CO_MORBID" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_DESCRIPTION" type="string"/>
		<return-scalar column="PRIMARY_DESC" type="string"/>
		<return-scalar column="SECONDARY_DESC" type="string"/>
		<return-scalar column="CO_MORBID_DESC" type="string"/>
		<![CDATA[SELECT
				  PR.ENCOUNTERID AS ENCOUNTER_ID,
				  U.USERNAME AS CONSULTANT_NAME,
				  CASE WHEN E.MEDICAL_LICENSE_NO IS NOT NULL THEN E.MEDICAL_LICENSE_NO ELSE '-' END AS CONSULTANT_NIK,
				  E.EMPNO AS EMPNO,
				  NS.CODE AS DIAGNOSIS_ICD_10_CODE,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.CODE ELSE '-' END AS PRIMARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.CODE ELSE '-' END AS SECONDARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.CODE ELSE '-' END AS CO_MORBID,
				  NS.DESCRIPTION AS DIAGNOSIS_ICD_10_DESCRIPTION,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.DESCRIPTION ELSE '-' END AS PRIMARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.DESCRIPTION ELSE '-' END AS SECONDARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.DESCRIPTION ELSE '-' END AS CO_MORBID_DESC
				FROM
					PROBLEM PR
				LEFT JOIN PROBLEMTRANSACTIONNAMESPACE PNM ON
					PNM.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN NAMESPACECODES NS ON
					(NS.CODE = PNM.NAMESPACE_CODE
					AND NS.NAMESPACEID = PNM.NAMESPACE_ID
					AND NS.ISACTIVE = 1)
				LEFT JOIN LOOKUPENTITY STATUS ON
					STATUS.LOOKUPID = PR.PROBLEM_STATUS
				LEFT JOIN NAMESPACES NSS ON
					(NSS.NAMESPACEID = NS.NAMESPACEID)
				LEFT JOIN LOOKUPENTITY STAGE ON
					STAGE.LOOKUPID = PNM.STAGE
				LEFT JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = PNM.TYPE
				INNER JOIN HISUSER U ON
					U.ID = PR.CREATEDBY
				LEFT JOIN LOOKUPENTITY PRTYPE ON
					PRTYPE.LOOKUPID = PR.PROBLEM_TYPE
				LEFT JOIN PROBLEM_MASTER PM ON
					PM.ID = PR.PROBLEM_MASTER_ID
				LEFT JOIN PROBLEM_APPLICABLE_ENCOUNTER PAE ON
					PAE.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PRM ON
					PRM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UNU ON
					UNU.ID = PR.UNCHARTEDBY
				LEFT JOIN EMPLOYEE UNE ON
					UNE.EMPLOYEE_ID = UNU.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UNPRM ON
					UNPRM.ID = UNE.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY PROBTYPE ON
					PROBTYPE.LOOKUPID = PR.PROBLEMTYPEID
				INNER JOIN VISIT V ON
				  V.PATIENT_ID = PR.PATIENTID AND V.VISITID = PR.VISITID
				WHERE V.SITE_ID = :branchId AND PR.PATIENTID = :patientId AND PR.ENCOUNTERID= :encounterId ORDER BY PR.ENCOUNTERID ASC]]>
	</sql-query>
	
	<sql-query name="getMedisPrimaryIPSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="CONSULTANT_NAME" type="string"/>
		<return-scalar column="CONSULTANT_NIK" type="string"/>
		<return-scalar column="EMPNO" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_CODE" type="string"/>
		<return-scalar column="PRIMARY" type="string"/>
		<return-scalar column="SECONDARY" type="string"/>
		<return-scalar column="CO_MORBID" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_DESCRIPTION" type="string"/>
		<return-scalar column="PRIMARY_DESC" type="string"/>
		<return-scalar column="SECONDARY_DESC" type="string"/>
		<return-scalar column="CO_MORBID_DESC" type="string"/>
		<![CDATA[SELECT
				  PR.ENCOUNTERID AS ENCOUNTER_ID,
				  U.USERNAME AS CONSULTANT_NAME,
				  CASE WHEN E.MEDICAL_LICENSE_NO IS NOT NULL THEN E.MEDICAL_LICENSE_NO ELSE '-' END AS CONSULTANT_NIK,
				  E.EMPNO AS EMPNO,
				  NS.CODE AS DIAGNOSIS_ICD_10_CODE,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.CODE ELSE '-' END AS PRIMARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.CODE ELSE '-' END AS SECONDARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.CODE ELSE '-' END AS CO_MORBID,
				  NS.DESCRIPTION AS DIAGNOSIS_ICD_10_DESCRIPTION,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.DESCRIPTION ELSE '-' END AS PRIMARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.DESCRIPTION ELSE '-' END AS SECONDARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.DESCRIPTION ELSE '-' END AS CO_MORBID_DESC
				FROM
					PROBLEM PR
				LEFT JOIN PROBLEMTRANSACTIONNAMESPACE PNM ON
					PNM.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN NAMESPACECODES NS ON
					(NS.CODE = PNM.NAMESPACE_CODE
					AND NS.NAMESPACEID = PNM.NAMESPACE_ID
					AND NS.ISACTIVE = 1)
				LEFT JOIN LOOKUPENTITY STATUS ON
					STATUS.LOOKUPID = PR.PROBLEM_STATUS
				LEFT JOIN NAMESPACES NSS ON
					(NSS.NAMESPACEID = NS.NAMESPACEID)
				LEFT JOIN LOOKUPENTITY STAGE ON
					STAGE.LOOKUPID = PNM.STAGE
				LEFT JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = PNM.TYPE
				INNER JOIN HISUSER U ON
					U.ID = PR.CREATEDBY
				LEFT JOIN LOOKUPENTITY PRTYPE ON
					PRTYPE.LOOKUPID = PR.PROBLEM_TYPE
				LEFT JOIN PROBLEM_MASTER PM ON
					PM.ID = PR.PROBLEM_MASTER_ID
				LEFT JOIN PROBLEM_APPLICABLE_ENCOUNTER PAE ON
					PAE.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PRM ON
					PRM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UNU ON
					UNU.ID = PR.UNCHARTEDBY
				LEFT JOIN EMPLOYEE UNE ON
					UNE.EMPLOYEE_ID = UNU.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UNPRM ON
					UNPRM.ID = UNE.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY PROBTYPE ON
					PROBTYPE.LOOKUPID = PR.PROBLEMTYPEID
				INNER JOIN VISIT V ON
				  V.PATIENT_ID = PR.PATIENTID AND V.VISITID = PR.VISITID
				WHERE V.SITE_ID = :branchId AND PR.PATIENTID = :patientId AND PR.ENCOUNTERID= :encounterId AND PNM.STAGE = '295256' ORDER BY PR.ENCOUNTERID ASC]]>
	</sql-query>
	
	<sql-query name="getMedisSecondaryIPSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="CONSULTANT_NAME" type="string"/>
		<return-scalar column="CONSULTANT_NIK" type="string"/>
		<return-scalar column="EMPNO" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_CODE" type="string"/>
		<return-scalar column="PRIMARY" type="string"/>
		<return-scalar column="SECONDARY" type="string"/>
		<return-scalar column="CO_MORBID" type="string"/>
		<return-scalar column="DIAGNOSIS_ICD_10_DESCRIPTION" type="string"/>
		<return-scalar column="PRIMARY_DESC" type="string"/>
		<return-scalar column="SECONDARY_DESC" type="string"/>
		<return-scalar column="CO_MORBID_DESC" type="string"/>
		<![CDATA[SELECT
				  PR.ENCOUNTERID AS ENCOUNTER_ID,
				  U.USERNAME AS CONSULTANT_NAME,
				  CASE WHEN E.MEDICAL_LICENSE_NO IS NOT NULL THEN E.MEDICAL_LICENSE_NO ELSE '-' END AS CONSULTANT_NIK,
				  E.EMPNO AS EMPNO,
				  NS.CODE AS DIAGNOSIS_ICD_10_CODE,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.CODE ELSE '-' END AS PRIMARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.CODE ELSE '-' END AS SECONDARY,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.CODE ELSE '-' END AS CO_MORBID,
				  NS.DESCRIPTION AS DIAGNOSIS_ICD_10_DESCRIPTION,
				  CASE WHEN TYPE.LOOKUPVALUE ='Primary' THEN NS.DESCRIPTION ELSE '-' END AS PRIMARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Secondary' THEN NS.DESCRIPTION ELSE '-' END AS SECONDARY_DESC,
				  CASE WHEN TYPE.LOOKUPVALUE ='Co-Morbidity' THEN NS.DESCRIPTION ELSE '-' END AS CO_MORBID_DESC
				FROM
					PROBLEM PR
				LEFT JOIN PROBLEMTRANSACTIONNAMESPACE PNM ON
					PNM.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN NAMESPACECODES NS ON
					(NS.CODE = PNM.NAMESPACE_CODE
					AND NS.NAMESPACEID = PNM.NAMESPACE_ID
					AND NS.ISACTIVE = 1)
				LEFT JOIN LOOKUPENTITY STATUS ON
					STATUS.LOOKUPID = PR.PROBLEM_STATUS
				LEFT JOIN NAMESPACES NSS ON
					(NSS.NAMESPACEID = NS.NAMESPACEID)
				LEFT JOIN LOOKUPENTITY STAGE ON
					STAGE.LOOKUPID = PNM.STAGE
				LEFT JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = PNM.TYPE
				INNER JOIN HISUSER U ON
					U.ID = PR.CREATEDBY
				LEFT JOIN LOOKUPENTITY PRTYPE ON
					PRTYPE.LOOKUPID = PR.PROBLEM_TYPE
				LEFT JOIN PROBLEM_MASTER PM ON
					PM.ID = PR.PROBLEM_MASTER_ID
				LEFT JOIN PROBLEM_APPLICABLE_ENCOUNTER PAE ON
					PAE.PROBLEM_ID = PR.PROBLEMID
				LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PRM ON
					PRM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UNU ON
					UNU.ID = PR.UNCHARTEDBY
				LEFT JOIN EMPLOYEE UNE ON
					UNE.EMPLOYEE_ID = UNU.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UNPRM ON
					UNPRM.ID = UNE.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY PROBTYPE ON
					PROBTYPE.LOOKUPID = PR.PROBLEMTYPEID
				INNER JOIN VISIT V ON
				  V.PATIENT_ID = PR.PATIENTID AND V.VISITID = PR.VISITID
				WHERE V.SITE_ID = :branchId AND PR.PATIENTID = :patientId AND PR.ENCOUNTERID= :encounterId AND PNM.STAGE = '295258' ORDER BY PR.ENCOUNTERID ASC]]>
	</sql-query>
	
	<sql-query name="getBillingIPSatuSehat">
		<return-scalar column="NO_INVOICE" type="string"/>
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="PLAN" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="GROUPID" type="long"/>
		<return-scalar column="GROUPCODE" type="string"/>
		<return-scalar column="GROUPNAME" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
				 	IMI.INVOICE_NO AS NO_INVOICE,
					TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL,      
				    IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					(SELECT LISTAGG(PPD.PLAN_NAME,' COB ')FROM INS_SPONSER_INVOICE SI INNER JOIN PLANDEFINITION PPD ON PPD.PLAN_ID = SI.PLAN_ID WHERE SI.MASTER_INV_ID = IMI.MASTER_INVOICE_ID) AS PLAN,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					G.GROUPID AS GROUPID,
				    COALESCE(G.GROUPCODE, '-') AS GROUPCODE,
				    COALESCE(G.GROUPNAME, 'GENERAL') AS GROUPNAME,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
							PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
						SO.ID = PCR.SRC_DOC_ID
						AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
				ORDER BY IMI.INVOICE_NO ]]>
	</sql-query>
	
	<sql-query name="getListMedicationIPSatuSehat">
		<return-scalar column="NO_RESEP" type="string"/>
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="NAMA_OBAT" type="string"/>
		<return-scalar column="QUANTITY" type="string"/>
		<return-scalar column="INSTRUCTION" type="string"/>
		<return-scalar column="ORDERS_ID" type="long"/>
		<return-scalar column="MIXTURE" type="string"/>
		<return-scalar column="KODE_OBAT" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PRICE" type="string"/>
		<![CDATA[SELECT
					DISTINCT O.ORDER_NO AS NO_RESEP,
					CASE WHEN IH.CREATEDDT IS NOT NULL THEN TO_CHAR(IH.CREATEDDT ,'yyyy-MM-dd HH24:MI:SS') ELSE TO_CHAR(DO.ORDEREDDATE ,'yyyy-MM-dd HH24:MI:SS') END AS TANGGAL,
					CASE WHEN ITM.NAME IS NOT NULL THEN ITM.NAME ELSE DO.ACTIVE_DRUG END AS NAMA_OBAT,
					COALESCE(ID.ISSUED_QTY,DO.QUANTITY) AS QUANTITY,
					DO.INSTRUCTION AS INSTRUCTION,
					DO.ORDERS_ID AS ORDERS_ID,
					CASE WHEN DO.ISMIXTURE ='1' THEN 'Y' ELSE 'N' END AS MIXTURE,
					ITM.CODE AS KODE_OBAT,
					O.ENCOUNTER_ID AS ENCOUNTER_ID,
					ROUND(ID.ISSUED_QTY * IBD.UNIT_PRICE) AS PRICE
				FROM		
			 		ORDERS O 
			 	INNER JOIN VISIT V ON
					V.PATIENT_ID = O.PATIENT_ID AND V.VISITID = O.VISIT_ID
         		INNER JOIN DRUGORDER DO ON
					DO.ORDERS_ID = O.ORDER_ID
				LEFT JOIN ISSUEDETAIL ID ON
					ID.DRUGORDER_ID = DO.ORDERID
		        LEFT JOIN ITEM ITM ON
					ITM.ID = ID.ITEM
		        LEFT JOIN ISSUEHEADER IH ON
					IH.TRANSACTION_ID = ID.ISSUEHEADER_ID
				LEFT JOIN ISSUEBATCHDETAIL IBD ON
					(IBD.ISSUEDETAIL_ID = ID.DETAIL_ID)
				WHERE TRUNC(V.MARKEDFORDISCHAGEDATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD'))
		         	AND V.SITE_ID = :branchId
				    AND V.PATIENT_ID = :patientId
	              	AND O.ENCOUNTER_ID= :encounterId
	              	AND DO.MIXTUREID IS NULL]]>
	</sql-query>
	
	<sql-query name="getListMixtureIPSatuSehat">
		<return-scalar column="NAMA_OBAT" type="string"/>
		<return-scalar column="QUANTITY" type="string"/>
		<return-scalar column="INSTRUCTION" type="string"/>
		<return-scalar column="KODE_OBAT" type="string"/>
		<return-scalar column="PRICE" type="string"/>
		<![CDATA[SELECT
					ITM.NAME AS NAMA_OBAT,
					ID.ISSUED_QTY AS QUANTITY,
					DO.INSTRUCTION AS INSTRUCTION,
					ITM.CODE AS KODE_OBAT,
					ROUND(ID.ISSUED_QTY * IBD.UNIT_PRICE) AS PRICE
				FROM
					DRUGORDER DO
					INNER JOIN ISSUEDETAIL ID ON
						ID.DRUGORDER_ID = DO.ORDERID
         			INNER JOIN ITEM ITM ON
						ITM.ID = ID.ITEM
					LEFT JOIN ISSUEHEADER IH ON
						IH.TRANSACTION_ID = ID.ISSUEHEADER_ID
					LEFT JOIN ISSUEBATCHDETAIL IBD ON
						(IBD.ISSUEDETAIL_ID = ID.DETAIL_ID)
				WHERE
					DO.ORDERS_ID = :ordersId
					AND DO.ISMIXTURE = '0'
					AND DO.MIXTUREID IS NOT NULL]]>
	</sql-query>
	
	<sql-query name="getListMedicationServiceIPSatuSehat">
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
            		TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL, 
					IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
					PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = PCR.SRC_DOC_ID
					AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
				ORDER BY IMI.INVOICE_NO]]>
	</sql-query>
	
	<sql-query name="getListMedicationServiceIPPemeriksaanPenunjangSatuSehat">
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
            		TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL, 
					IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
					PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = PCR.SRC_DOC_ID
					AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
					AND G.GROUPNAME IN ('RADIOLOGI','LABORATORIUM')
				ORDER BY IMI.INVOICE_NO]]>
	</sql-query>
	
	<sql-query name="getListMedicationServiceTindakanIPSatuSehat">
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="TARRIF" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ORDER_NO" type="string"/>
		<![CDATA[SELECT  
            		TO_CHAR(IMI.CREATEDDATETIME ,'DD-MM-YYYY HH24:MI:SS') AS TANGGAL, 
					IL.SERVICE_NAME  AS SERVICE_NAME,
					ROUND(IL.BASE_PRICE) AS TARRIF,
					EC.ENCOUNTER_ID AS ENCOUNTER_ID,
					COALESCE(SM.SERVICE_CODE, IT.CODE) AS SERVICE_CODE,
					ORD.ORDER_NO AS ORDER_NO
				FROM INS_INVOICE_LINEITEMS IL
				INNER JOIN INS_MASTER_INVOICE IMI ON
					IMI.MASTER_INVOICE_ID = IL.MASTER_INV_ID 
				LEFT JOIN ENCOUNTER EC ON
					EC.ENCOUNTER_FK = IMI.VISIT_ID 
				INNER JOIN VISIT V ON
					V.VISITID = IMI.VISIT_ID 
				LEFT JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = IL.SERVICE_ID
					AND IL.ISPHARMACYRECORD = 'N'
				LEFT JOIN ITEM IT ON
					IT.ID = IL.SERVICE_ID
				LEFT JOIN PATIENT_CHARGE_RECORD PCR ON
					PCR.CHARGE_REC_ID = IL.PCR_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = PCR.SRC_DOC_ID
					AND PCR.SRC_DOC_TYPE <> 100901
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN GROUPS G ON
					G.GROUPID = SM.BILLINGGROUP_ID
				WHERE 
					TRUNC(IMI.CREATEDDATETIME) = TRUNC(TO_DATE(:tanggalpulang,'YYYY-MM-DD'))
					AND V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND EC.ENCOUNTER_ID = :encounterId
					AND G.GROUPNAME NOT IN ('RADIOLOGI','LABORATORIUM')
				ORDER BY IMI.INVOICE_NO]]>
	</sql-query>
	
	<sql-query name="getListLabResultIPSatuSehat">
		<return-scalar column="NO_ORDER" type="string"/>
		<return-scalar column="TANGGAL_PEMERIKSAAN" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="NILAI_NORMAL" type="string"/>
		<return-scalar column="RESULT" type="string"/>
		<return-scalar column="SATUAN" type="string"/>
		<return-scalar column="CERTIFIED_DATE" type="string"/>
		<return-scalar column="CERTIFIYNG_CONSULTANT_BPJS_CODE" type="string"/>
		<return-scalar column="CERTIFYING_CONSULTANT_NAME" type="string"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PRICE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DESCRIPTION" type="string"/>
		<return-scalar column="CERTIFYING_EMPLOYEE_CODE" type="string"/>
		<return-scalar column="PARAMETER" type="string"/>
		<return-scalar column="LAB_RESULT_ID" type="string"/>
		<![CDATA[SELECT
					 DISTINCT ORD.ORDER_NO AS NO_ORDER,
					 TO_CHAR(LR.GENERATED_DATE ,'YYYY-MM-DD HH24:MI:SS') AS TANGGAL_PEMERIKSAAN,
					 SM.SERVICE_NAME AS SERVICE_NAME,
					 LR.REFERENCE_RANGE AS NILAI_NORMAL,
					 LR.RESULT_VALUE AS RESULT,
				     LR.UNIT SATUAN,
				     TO_CHAR(LR.CERTIFIED_DATE ,'YYYY-MM-DD HH24:MI:SS')AS CERTIFIED_DATE,
					 E.LICENSE_NUMBER AS CERTIFIYNG_CONSULTANT_BPJS_CODE,
				     E.EMPLOYEE_NAME AS CERTIFYING_CONSULTANT_NAME,
				     SM.SERVICE_CODE AS SERVICE_CODE,
				     B.ENCOUNTER_ID,
				     CEIL(SO.BASE_PRICE) AS PRICE,
				     SP.CODE AS CODE,
				     SP.DESCRIPTION AS DESCRIPTION,
				     E.EMPNO AS CERTIFYING_EMPLOYEE_CODE,
				     CASE WHEN TYPE.LOOKUPVALUE = 'PARAMETER' THEN 'Y' ELSE 'N' END AS PARAMETER,
				     LAB_RESULT_ID AS LAB_RESULT_ID
				FROM
					VISIT V
				JOIN ENCOUNTER B ON
					B.PATIENTID = V.PATIENT_ID AND B.ENCOUNTER_FK = V.VISITID
				INNER JOIN ORDERS O ON
					O.VISIT_ID = V.VISITID
				INNER JOIN LABORDER LO ON
					LO.VISIT_ID = V.VISITID
				INNER JOIN LABRESULT LR ON
					LR.LAB_ORDER_ID = LO.LAB_ORDER_ID
				INNER JOIN LABSERVICEMASTER LM ON
					LM.LAB_SERVICE_ID = LR.LAB_SERVICE_MASTER_ID
				INNER JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = LM.SERVICE_ID
				INNER JOIN EMPLOYEE E ON
					LR.CERTIFIEDEMPID = E.EMPLOYEE_ID
				LEFT JOIN SERVICEORDER SO ON
					SO.ID = LO.SERVICE_ORDER_ID
				LEFT JOIN ORDERS ORD ON
					SO.ORDERS_ID = ORD.ORDER_ID
				LEFT JOIN LABSERVICE_SPECIMEN_MAP LSSM ON LSSM.LAB_SERVICE_ID   =LM.LAB_SERVICE_ID AND LSSM.ACTIVE='Y'
        		LEFT OUTER JOIN SPECIMEN SP ON LSSM.SPECIMEN_ID=SP.ID
        		INNER JOIN LOOKUPENTITY TYPE ON TYPE.LOOKUPID = LM.RESULT_TYPE
				WHERE 
				--TRUNC(V.MARKEDFORDISCHAGEDATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD')) 
					V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND B.ENCOUNTER_ID = :encounterId
					AND LR.CERTIFIED_DATE IS NOT NULL
				ORDER BY
					LR.LAB_RESULT_ID]]>
	</sql-query>
	
	<sql-query name="getLabResultParameterIPSatuSehat">
		<return-scalar column="PARAMETERNAME" type="string"/>
		<return-scalar column="UNIT" type="string"/>
		<return-scalar column="RESULTRANGE" type="string"/>
		<return-scalar column="RESULTVALUE" type="string"/>
		<return-scalar column="PARAMSERVICE" type="string"/>
		<![CDATA[SELECT
				    COALESCE(IP.INVESTIGATIONPARAMETERNAME, SM.SERVICE_NAME)AS PARAMETERNAME,
				    CASE WHEN LRP.LAB_RESULT_PARAMETER_ID IS NULL THEN LR.UNIT ELSE LRP.UNIT END AS UNIT,
					LRP.RESULTRANGE AS RESULTRANGE,
					LRP.RESULTVALUE AS RESULTVALUE,
					SM.SERVICE_NAME AS PARAMSERVICE
				FROM
					SERVICEORDER SO
				INNER JOIN ORDERS O ON
					O.ORDER_ID = SO.ORDERS_ID
				INNER JOIN SERVICEMASTER SM ON
					SM.SERVICE_MASTER_ID = SO.SERVICE_ID
				INNER JOIN LABSERVICEMASTER LSM ON
					LSM.SERVICE_ID = SM.SERVICE_MASTER_ID
				INNER JOIN LOOKUPENTITY TYPE ON
					TYPE.LOOKUPID = LSM.RESULT_TYPE
				LEFT OUTER JOIN SERVICEMASTER SMPR ON
					SMPR.SERVICE_MASTER_ID = SO.PROFILE_ID
				LEFT OUTER JOIN LABORDER LO ON
					LO.SERVICE_ORDER_ID = SO.ID
				LEFT OUTER JOIN LABRESULT LR ON
					LR.LAB_ORDER_ID = LO.LAB_ORDER_ID
				LEFT OUTER JOIN LABRESULTPARAMETER LRP ON
					LRP.LAB_RESULT_ID = LR.LAB_RESULT_ID
				LEFT JOIN INVESTIGATIONPARAMETER IP ON
					(IP.INVESTIGATION_PARAMETER_ID = LRP.PARAMETER_ID)
				LEFT OUTER JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = LR.CERTIFIEDEMPID
				LEFT OUTER JOIN PREFIX_MASTER EMPPF ON
					EMPPF.ID = E.EMP_PREFIX
				LEFT OUTER JOIN HISDEPARTMENT D ON
					D.DEPARTMENT_ID = E.DEPARTMENT_ID
				LEFT OUTER JOIN ORGSTRUCTURE CO ON
					CO.ID = D.SITEID
				LEFT OUTER JOIN SERVICECENTER SC ON
					SC.SERVICE_CENTER_ID = LO.SERVICE_CENTER_ID
				WHERE
					SM.SERVICE_TYPE = 115
					AND SM.SERVICE_CATEGORY != 114
					AND LR.RESULT_STATUS IN (302, 304)
					AND LSM.RESULT_TYPE = 1099
					AND LR.LAB_RESULT_ID = :labresultId
				ORDER BY
					LSM.ORDERBY,
					IP.PARAMETERSEQUENCE ASC
		]]>
	</sql-query>
	
	<sql-query name="getListRadiologyResultIPSatuSehat">
		<return-scalar column="ORDER_NO" type="string"/>
		<return-scalar column="TANGGAL" type="string"/>
		<return-scalar column="SERVICE_NAME" type="string"/>
		<return-scalar column="REPORTDATA" type="string"/>
		<return-scalar column="CERTIFIYNG_CONSULTANT_BPJS_CODE" type="string"/>
		<return-scalar column="CERTIFYING_CONSULTANT_NAME" type="string"/>
		<return-scalar column="SERVICE_CODE" type="string"/>
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PRICE" type="string"/>
		<return-scalar column="CERTIFYING_EMPLOYEE_CODE" type="string"/>
		<![CDATA[SELECT
					O.ORDER_NO AS ORDER_NO,
					TO_CHAR(SCO.CREATEDDT, 'YYYY-MM-DD HH24:MI:SS') AS TANGGAL,
					SM.SERVICE_NAME AS SERVICE_NAME,
					SCO.REPORTDATA REPORTDATA,
					E.LICENSE_NUMBER AS CERTIFIYNG_CONSULTANT_BPJS_CODE,
					E.EMPLOYEE_NAME AS CERTIFYING_CONSULTANT_NAME,
					SM.SERVICE_CODE AS SERVICE_CODE,
					B.ENCOUNTER_ID AS ENCOUNTER_ID,
					CEIL(SO.BASE_PRICE) AS PRICE,
					E.EMPNO AS CERTIFYING_EMPLOYEE_CODE
				FROM
					VISIT V
				JOIN ENCOUNTER B ON
					B.PATIENTID = V.PATIENT_ID AND B.ENCOUNTER_FK = V.VISITID
				INNER JOIN ORDERS O ON
					O.VISIT_ID = V.VISITID
				INNER JOIN SERVICEORDER SO ON
					SO.ORDERS_ID = O.ORDER_ID
        		INNER JOIN SERVICEMASTER SM ON 
        			SM.SERVICE_MASTER_ID = SO.SERVICE_ID
				INNER JOIN SERVICECENTERORDER SC ON
					SC.SERVICEORDER = SO.ID
				INNER JOIN SERVICECENTERORDERRESULT SCO ON
					SCO.REPORTNUMBER = SC.REPORTNUMBER
				INNER JOIN EMPLOYEE E ON
					SO.RENDERED_EMPLOYEE = E.EMPLOYEE_ID
				WHERE 
				--TRUNC(V.MARKEDFORDISCHAGEDATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD')) 
				    V.SITE_ID = :branchId
					AND V.PATIENT_ID = :patientId
					AND B.ENCOUNTER_ID = :encounterId
				ORDER BY
					SCO.ID
				]]>
	</sql-query>
		
	<sql-query name="getvitalSignIPSatuSehat">
		<return-scalar column="DESCRIPTION" type="string"/>
		<return-scalar column="CODE_VITALSIGN" type="string"/>
		<return-scalar column="VALUE_UNIT" type="string"/>
		<return-scalar column="VITAL_VALUE" type="string"/>
		<return-scalar column="EMPLOYEE_ID" type="string"/>
		<return-scalar column="EMPLOYEE_NAME" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					DISTINCT V.PARAMETER_VALUE AS DESCRIPTION,
					VP.PARAMETER_CODE AS CODE_VITALSIGN,
					U.CODE AS VALUE_UNIT,
					V.CURRENT_VALUE AS VITAL_VALUE,
					E.EMPNO AS EMPLOYEE_ID,
					E.EMPLOYEE_NAME AS EMPLOYEE_NAME,
					V.ENTERED_DATETIME AS TIMESTAMP 
				  FROM VITALSIGN V
				  INNER JOIN PATIENT P ON
					P.PATIENT_ID = V.PATIENT_ID
				  INNER JOIN VITALPARAMENTERS VP ON
					VP.PARAMETER_ID = V.PARAMETER_ID
				  INNER JOIN PARAMETERTOGRPMAP PP ON
					PP.PARAMETER_ID = V.PARAMETER_ID
				  INNER JOIN GROUPS G ON
					G.GROUPID = PP.GROUP_ID
				  INNER JOIN VISIT VT ON
					VT.VISITID = V.VISIT_ID
				  INNER JOIN ENCOUNTER ENC ON
					ENC.ENCOUNTER_FK = VT.VISITID
				  LEFT JOIN UOM U ON
					U.ID = VP.UOM
				  LEFT JOIN HISUSER HU ON
          			V.CREATEDBY = HU.ID
				  LEFT JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = HU.EMPLOYEE_ID
				WHERE
					--TRUNC(VT.MARKEDFORDISCHAGEDATE) = TRUNC(TO_DATE(:tanggalpulang, 'YYYY-MM-DD'))
					VT.SITE_ID = :branchId
					AND V.CURRENT_VALUE IS NOT NULL
					AND V.ACTIVE = 1
					AND G.ACTIVE = 1
					AND P.PATIENT_ID = :patientId
					AND ENC.ENCOUNTER_ID = :encounterId
				ORDER BY
					V.ENTERED_DATETIME DESC
		]]>
	</sql-query>
	
	<sql-query name="getListExaminationIPSatuSehat">
		<return-scalar column="QUESTIONNAME" type="string"/>
		<return-scalar column="QUESTIONANSWER" type="string"/>
		<return-scalar column="QUESTION_ANSWER_ID" type="string"/>
		<return-scalar column="CREATEDATE" type="string"/>
		<![CDATA[SELECT
					CO.DISPLAY_NAME AS QUESTIONNAME ,
					COALESCE(CA.QUESTION_ANSWER, TO_CLOB('-')) AS QUESTIONANSWER,
					CA.ID AS QUESTION_ANSWER_ID,
					TO_CHAR(CA.CREATEDDATETIME, 'DD-MM-YYYY HH24:MI') AS CREATEDATE
				FROM
					CLINICAL_ANSWER CA
				INNER JOIN FORMFIELD FF ON
					FF.ID = CA.QUESTION_ID
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_ID = FF.COMPONENTID
				INNER JOIN CONCEPT CO ON
					CO.ID = FF.FIELD_REFERENCE
				INNER JOIN HISUSER H ON
					H.ID = CA.CREATEDBY
				INNER JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = H.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PM ON
					PM.ID = E.EMP_PREFIX
				LEFT JOIN HISUSER UH ON
					UH.ID = CA.UPDATEDBY
				LEFT JOIN EMPLOYEE UE ON
					UE.EMPLOYEE_ID = UH.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER UPM ON
					UPM.ID = UE.EMP_PREFIX
				WHERE
					CA.PATIENT = :patientId
					AND SC.COMPONENT_CODE = 'EXAM'
					AND CA.ACTIVE = 1
					AND CA.UNCHARTEDBY IS NULL
					AND CA.VISIT = :visitId
				ORDER BY
					TRUNC(CA.CREATEDDATETIME) DESC,
					CA.CREATEDDATETIME ASC
		]]>
	</sql-query>
	
	<sql-query name="getAllergiIPSatuSehat">
		<return-scalar column="ENCOUNTER_ID" type="long"/>
		<return-scalar column="PATIENT_ID" type="long"/>
		<return-scalar column="ALLERGY_ID" type="long"/>
		<return-scalar column="ALLERGY_CODE" type="string"/>
		<return-scalar column="ALLERGEN_NAME" type="string"/>
		<return-scalar column="ALLERGEN_CATEGORY" type="string"/>
		<return-scalar column="COLORCODE" type="string"/>
		<return-scalar column="SEVERITY" type="string"/>
		<return-scalar column="REMARKS" type="string"/>
		<return-scalar column="ONSETDATE" type="string"/>
		<return-scalar column="CREATEDBY" type="string"/>
		<![CDATA[SELECT
					ALLERGYREC0_.ENCOUNTER_ID,
					PATIENT1_.PATIENT_ID,
					ALLERGYREC0_.ALLERGY_ID AS ALLERGY_ID,
					ALLERGEN3_.ALLERGEN_CODE AS ALLERGY_CODE,
					ALLERGEN3_.ALLERGEN_DESC AS ALLERGEN_NAME,
					LOOKUPENTI3_.LOOKUPVALUE AS ALLERGEN_CATEGORY,
					LOOKUPENTI5_.COLORCODE AS COLORCODE,
					LOOKUPENTI5_.LOOKUPVALUE AS SEVERITY,
					ALLERGYREC0_.CURRENT_REMARKS AS REMARKS,
					ALLERGYREC0_.ONSETDATE AS ONSETDATE,
					ENTERPRISE6_.USERNAME AS CREATEDBY
				FROM
					ALLERGYRECORDING ALLERGYREC0_
				INNER JOIN PATIENT PATIENT1_ ON
					ALLERGYREC0_.PATIENT_ID = PATIENT1_.PATIENT_ID
				LEFT OUTER JOIN DRUGGENERICS DRUGGENERI2_ ON
					ALLERGYREC0_.DRUG_GENERIC_ID = DRUGGENERI2_.DRUG_GEN_ID
				LEFT OUTER JOIN ALLERGEN ALLERGEN3_ ON
					ALLERGYREC0_.ALLERGEN = ALLERGEN3_.ALLERGEN_ID
				LEFT OUTER JOIN LOOKUPENTITY LOOKUPENTI3_ ON
					ALLERGEN3_.ALLERGICTYPE_ID  = LOOKUPENTI3_.LOOKUPID
				LEFT OUTER JOIN LOOKUPENTITY LOOKUPENTI4_ ON
					ALLERGYREC0_.STATUS = LOOKUPENTI4_.LOOKUPID
				LEFT OUTER JOIN LOOKUPENTITY LOOKUPENTI5_ ON
					ALLERGYREC0_.SEVERITY = LOOKUPENTI5_.LOOKUPID,
					HISUSER ENTERPRISE6_
				where
					ALLERGYREC0_.SITE_ID = :branchId
					AND PATIENT1_.PATIENT_ID = :patientId
					AND ALLERGYREC0_.ENCOUNTER_ID = :encounterId
					AND ENTERPRISE6_.ID = ALLERGYREC0_.CREATEDBY
				ORDER BY
					ALLERGYREC0_.RECORDED_DATE DESC
				]]>
	</sql-query>
	
	<sql-query name="getDietIPSatuSehat">
		<return-scalar column="DIETNOTE" type="string"/>
		<return-scalar column="DATETIMEINPUT" type="string"/>
		<return-scalar column="CREATEDBY" type="string"/>
		<![CDATA[SELECT
					DC.NAME AS DIETNOTE,
					TO_CHAR(D.CREATEDDATETIME, 'DD-MM-YYYY HH:MI:SS') AS DATETIMEINPUT,
					H.USERNAME AS CREATEDBY,
					V.SITE_ID AS SITE_ID
				FROM
					DIETPRESCRIPTION D
				LEFT JOIN DIET_ORDER DO ON
					DO.PRESCRIPTION = D.ID
				INNER JOIN DIETCONFIGURATION DC ON
					DC.ID = D.DIETTYPE
				INNER JOIN HISUSER H ON
					H.ID = D.CREATEDBY
				LEFT JOIN HISUSER HI ON
					HI.ID = D.UPDATEDBY
				LEFT JOIN VISIT V ON
					V.PATIENT_ID = D.PATIENT
					AND V.VISITID = D.VISIT
				WHERE
					V.SITE_ID = :branchId
					AND D.PATIENT = :patientId
					AND DC.ISACTIVE = 1
				ORDER BY
					D.CREATEDDATETIME DESC
				]]>
	</sql-query>
	
	<sql-query name="getclinicalNoteIPSatuSehat">
		<return-scalar column="ENCOUNTERID" type="long"/>
		<return-scalar column="SUBJECTIVE" type="string"/>
		<return-scalar column="OBJECTIVE" type="string"/>
		<return-scalar column="ASSESMENT" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="PUBLISHED" type="string"/>
		<return-scalar column="ADDENDUM" type="string"/>
		<return-scalar column="EMPNAME" type="string"/>
		<return-scalar column="SITE_ID" type="string"/>
		<return-scalar column="DATETIMEINPUT" type="string"/>
		<![CDATA[SELECT
					CN.ENCOUNTERID,
					CN.NOTE AS SUBJECTIVE,
					CN.NOTE AS OBJECTIVE,
					SC.COMPONENT_NAME AS ASSESMENT,
					CN.SECTION_CODE AS CODE,
					CNA.ISPUBLISHED AS PUBLISHED,
					CNA.ADDENDUM AS ADDENDUM,
					PF.PREFIX || ' ' || EMP.EMPLOYEE_NAME AS EMPNAME,
					V.SITE_ID AS SITE_ID,
					TO_CHAR(CN.CREATEDDATETIME, 'YYYY-MM-DD HH24:MI') AS DATETIMEINPUT
				FROM
					CLINICAL_NOTE CN
				INNER JOIN HISUSER U ON
					U.ID = CN.CREATEDBY
				INNER JOIN EMPLOYEE EMP ON
					EMP.EMPLOYEE_ID = U.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PF ON
					PF.ID = EMP.EMP_PREFIX
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_CODE = CN.SECTION_CODE
				LEFT JOIN CLINICAL_NOTE_ADDENDUM CNA ON
					CNA.CLINICAL_NOTE_ID = CN.ID
				LEFT JOIN VISIT V ON
					V.PATIENT_ID = CN.PATIENTID
					AND V.VISITID = CN.VISITID
				WHERE
					V.SITE_ID = :branchId
					AND CN.PATIENTID = :patientId
					AND CN.NOTE_TYPE = 'CHAT'
					AND CN.ENCOUNTERID = :encounterId
					AND CN.IS_ACTIVE = 1
				ORDER BY
					SC.SORTORDER ASC,
					CN.CREATEDDATETIME
				]]>
	</sql-query>
	
	<sql-query name="getconsultantNoteIPSatuSehat">
		<return-scalar column="NAMAPASIEN" type="string"/>
		<return-scalar column="NOREKAMMEDIS" type="string"/>
		<return-scalar column="NAMAKELUARGA" type="string"/>
		<return-scalar column="TANGGALLAHIR" type="string"/>
		<return-scalar column="JENISKELAMIN" type="string"/>
		<return-scalar column="TANGGALMASUKRS" type="string"/>
		<return-scalar column="KELASKAMAR" type="string"/>
		<return-scalar column="WAKTUTANGGALPASIENTIBADIRUANGAN" type="string"/>
		<return-scalar column="WAKTUTANGGALPASIENMULAIASSESMEN" type="string"/>
		<return-scalar column="KELUHANUTAMA" type="string"/>
		<return-scalar column="RIWAYATPENYAKITSEKARANG" type="string"/>
		<return-scalar column="RIWAYATPENYAKITKELUARGA" type="string"/>
		<return-scalar column="RIWAYATPENYAKITDAHULU" type="string"/>
		<return-scalar column="RIWAYATPEKERJAAN" type="string"/>
		<return-scalar column="RIWAYATALERGI" type="string"/>
		<return-scalar column="RIWAYATMINUMOBAT" type="string"/>
		<return-scalar column="OBATYANGSEDANGDIKONSUMSI" type="string"/>
		<return-scalar column="KEADAANUMUM" type="string"/>
		<return-scalar column="KESADARAN" type="string"/>
		<return-scalar column="GCS" type="string"/>
		<return-scalar column="TANDAVITAL" type="string"/>
		<return-scalar column="PEMERIKSAANSTATUSGENERALIS" type="string"/>
		<return-scalar column="PEMERIKSAANPENUNJANG" type="string"/>
		<return-scalar column="DIAGNOSISKERJA" type="string"/>
		<return-scalar column="DIAGNOSISBANDING" type="string"/>
		<return-scalar column="PERMASALAHANMEDIS" type="string"/>
		<return-scalar column="RENCANAASUHANDANTERAPI" type="string"/>
		<return-scalar column="KOLABORASIKONSULTASI" type="string"/>
		<return-scalar column="JENISTERAPI" type="string"/>
		<return-scalar column="TERAPI" type="string"/>
		<return-scalar column="TINDAKAN" type="string"/>
		<return-scalar column="KONSULTASI" type="string"/>
		<return-scalar column="PEMERIKSAANPENUNJANGLANJUTAN" type="string"/>
		<return-scalar column="HASILYANGDIHARAPKAN" type="string"/>
		<return-scalar column="EDUKASIAWAL" type="string"/>
		<return-scalar column="RENCANAPULANG" type="string"/>
		<return-scalar column="TANGGALDANWAKTUSELESAIASSESMEN" type="string"/>
		<![CDATA[SELECT
					PT.PATIENTNAME AS NAMAPASIEN,
					PT.MRNO AS NOREKAMMEDIS,
					GI.GUARANTORNAME AS NAMAKELUARGA,
					TO_CHAR(PT.DOB, 'DD-MM-YYYY') AS TANGGALLAHIR,
					LE.LOOKUPVALUE AS JENISKELAMIN,
					TO_CHAR(VT.VISIT_DATE , 'DD-MM-YYYY HH:MI:SS') AS TANGGALMASUKRS,
					BT.BEDTYPENAME AS KELASKAMAR,
					TO_CHAR(CPD.EVENT_FROM_DATE ,'YYYY-MM-DD HH:MI:SS') AS WAKTUTANGGALPASIENTIBADIRUANGAN,
					TO_CHAR(IP.LASTPOSTEDBEDCHARGE ,'YYYY-MM-DD HH:MI:SS') AS WAKTUTANGGALPASIENMULAIASSESMEN,
					CN.NOTE AS KELUHANUTAMA,
					CN.NOTE AS RIWAYATPENYAKITSEKARANG,
					FH.REMARKS AS RIWAYATPENYAKITKELUARGA,
					CN.NOTE AS RIWAYATPENYAKITDAHULU,
					'-' AS RIWAYATPEKERJAAN,
					'' AS RIWAYATALERGI,
					'-' AS RIWAYATMINUMOBAT,
					'-' AS OBATYANGSEDANGDIKONSUMSI,
					'-' AS KEADAANUMUM,
					'-' AS KESADARAN,
					'-' AS GCS,
					'' AS TANDAVITAL,
					'' AS PEMERIKSAANSTATUSGENERALIS,
					'' AS PEMERIKSAANPENUNJANG,
					'' AS DIAGNOSISKERJA,
					'' AS DIAGNOSISBANDING,
					'' AS PERMASALAHANMEDIS,
					'-' AS RENCANAASUHANDANTERAPI,
					'-' AS KOLABORASIKONSULTASI,
					'-' AS JENISTERAPI,
					'' AS TERAPI,
					'' AS TINDAKAN,
					'' AS KONSULTASI,
					'' AS PEMERIKSAANPENUNJANGLANJUTAN,
					'-' AS HASILYANGDIHARAPKAN,
					'-' AS EDUKASIAWAL,
					'-' AS RENCANAPULANG,
					TO_CHAR(CPD.EVENT_TO_DATE , 'DD-MM-YYYY HH:MI:SS') AS TANGGALDANWAKTUSELESAIASSESMEN
				FROM
					CONSULTATION_PATIENT_DETAILS CPD
				INNER JOIN PATIENT PT ON
					PT.PATIENT_ID = CPD.PATIENTID
				LEFT JOIN VISIT VT ON
					VT.VISITID = CPD.VISITID
				INNER JOIN HISDEPARTMENT HD ON
					HD.DEPARTMENT_ID = CPD.DEPTID
				LEFT JOIN LOOKUPENTITY LE ON
					(PT.GENDERID = LE.LOOKUPID)
				LEFT JOIN PATIENTADMISSION AP ON
					AP.VISITID = VT.VISITID
				LEFT JOIN BEDTYPE BT ON
					BT.BED_TYPE_ID  = AP.BEDTYPEID 
				LEFT JOIN CLINICAL_NOTE CN ON
					 CN.PATIENTID = CPD.PATIENTID AND CN.VISITID = CPD.VISITID AND CN.ISPUBLISHED='1'
				LEFT JOIN FAMILYHISTORY FH ON
					FH.VISITID = CPD.VISITID
					AND FH.PATIENTID = CPD.PATIENTID
				LEFT JOIN GUARANTORINFORMATION GI ON 
					GI.SRCDOCID = CN.PATIENTID
				LEFT JOIN INPATIENTS IP ON IP.PATIENT  = CPD.PATIENTID AND IP.VISITID = CPD.VISITID
				WHERE
					CPD.PATIENTID = :patientId
					AND CPD.VISITID = :visitId
				]]>
	</sql-query>
	
	<sql-query name="getdischargeSummaryIPSatuSehat">
		<return-scalar column="VISITID" type="string"/>
		<return-scalar column="TEMPLATE_ID" type="string"/>
		<return-scalar column="PATIENTID" type="string"/>
		<![CDATA[SELECT VISITID,TEMPLATE_ID, PATIENTID FROM DISCHARGESUMMARY WHERE PATIENTID = :patientId AND VISITID = :visitId
				]]>
	</sql-query>
	
	<sql-query name="getListindikasiRawatInapIPSatuSehat">
		<return-scalar column="PATIENTID" type="string"/>
		<return-scalar column="VISITID" type="string"/>
		<return-scalar column="REMARKS" type="string"/>
		<![CDATA[SELECT PATIENTID, VISITID, REMARKS FROM PATIENTADMISSION WHERE PATIENTID = :patientId AND VISITID = :visitId]]>
	</sql-query>
	
	<sql-query name="getListobatDibawaPulangIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSMed1' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListkondisiPasienIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSKon1' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListmobilisasiSaatPulangIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSKon16' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListalatKesehatanyangTerpasangIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSKon27' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListrencanaKontrolIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSIns3' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListinformasiPerawatandirumahIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSIns5' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListrencanaPemeriksaanPenunjangIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSIns20' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListkebutuhanEdukasiIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSIns28' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListpertolonganMendesakIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSIns202' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListpenyakitBerhubunganDenganIPSatuSehat">
		<return-scalar column="SOAPTEMPLATENAME" type="string"/>
		<return-scalar column="DATATYPE" type="string"/>
		<return-scalar column="CODE" type="string"/>
		<return-scalar column="DISPLAY_NAME" type="string"/>
		<return-scalar column="JAWABAN" type="string"/>
		<![CDATA[SELECT ST.SOAPTEMPLATENAME, FF.DATATYPE, CON.CODE, CON.DISPLAY_NAME, CASE WHEN FF.DATATYPE = 'TEXTAREA' THEN TO_CHAR(CA.CA_STRING) WHEN FF.DATATYPE = 'NUMERIC' THEN TO_CHAR(CA.CA_DOUBLE) WHEN FF.DATATYPE = 'TIME' THEN TO_CHAR(CA.CA_TIME) WHEN FF.DATATYPE = 'DATE' THEN TO_CHAR(CA.CA_DATE) WHEN FF.DATATYPE = 'CHECKBOXES' THEN TO_CHAR((SELECT CONCEPT.DISPLAY_NAME FROM CONCEPT WHERE CONCEPT.ID = CA.CA_CODED)) WHEN FF.DATATYPE = 'TEXT' THEN TO_CHAR(CA.CA_STRING) END AS JAWABAN FROM FORM_SECTIONS FS INNER JOIN SOAPTEMPLATE ST ON TO_CHAR(ST.SOAPTEMPLATEID) = TO_CHAR(FS.FORM_DESIGNER_ID) INNER JOIN SOAPCOMPONENTS SC ON SC.COMPONENT_CODE = ST.SOAPTEMPLATECODE LEFT JOIN FORMFIELD FF ON FF.COMPONENTID = SC.COMPONENT_ID INNER JOIN CONCEPT CON ON CON.ID = FF.FIELD_REFERENCE LEFT JOIN CONCEPT_OBSERVATION CO ON CO.CO_CONCEPT = CON.ID LEFT JOIN CONCEPT_ANSWER CA ON CA.CA_ID = CO.CO_ANSWER WHERE CO.CO_VISIT = :visitId AND FS.FORM_TEMPLATE_ID = :templateId AND FS.FORM_SECTION_TYPE = 'CLINICAL FORM'AND CON.CODE ='DSIns51' ORDER BY FS.ORDER_BY, FF.FIELD_REFERENCE
				]]>
	</sql-query>
	
	<sql-query name="getListCrossConsultationIPSatuSehat">
		<return-scalar column="CONSULTATION_TYPE" type="string"/>
		<return-scalar column="DOCTOR_NAME" type="string"/>
		<![CDATA[SELECT
					CASE WHEN CCT.CCT_NAME IS NOT NULL THEN CCT.CCT_NAME ELSE 'Cross Consultation' END AS CONSULTATION_TYPE,
					EMP.EMPLOYEE_NAME AS DOCTOR_NAME
				FROM CROSS_CONSULTATION_REQ CCR 
		        LEFT JOIN EMPLOYEE EMP ON EMP.EMPLOYEE_ID = CCR.CONSULTANT_ID
		        LEFT JOIN CROSSCONSULTANT_TYPES CCT ON CCT.CCT_ID = CCR.CROSSCONSULT_TYPE
				WHERE
					CCR.SITE_ID = :branchId AND CCR.PATIENTID = :patientId AND CCR.VISIT = :visitId
				]]>
	</sql-query>
	
	<sql-query name="getListRiwayatPenyakitKeluargaIPSatuSehat">
		<return-scalar column="RELATION" type="string"/>
		<return-scalar column="DESCRIPTION" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					RELATION.LOOKUPVALUE AS RELATION,
					FAMILYHIST0_.REMARKS AS DESCRIPTION,
					TO_CHAR(FAMILYHIST0_.CREATEDDT, 'MON DD,YYYY HH:MI:SS AM') AS TIMESTAMP
				FROM
					FAMILYHISTORY FAMILYHIST0_
				INNER JOIN PATIENT P ON
					P.PATIENT_ID = FAMILYHIST0_.PATIENTID
				INNER JOIN HISUSER H ON
					H.ID = FAMILYHIST0_.CREATEDBY
				INNER JOIN EMPLOYEE E ON
					E.EMPLOYEE_ID = H.EMPLOYEE_ID
				LEFT JOIN PREFIX_MASTER PM ON
					PM.ID = E.EMP_PREFIX
				LEFT JOIN LOOKUPENTITY RELATION ON
					RELATION.LOOKUPID = FAMILYHIST0_.RELATIONID
				WHERE
					(FAMILYHIST0_.PROTOCOL_ID IS NULL)
					AND FAMILYHIST0_.PATIENTID = :patientId
					AND FAMILYHIST0_.VISITID = :visitId
					AND FAMILYHIST0_.UNCHARTEDBY IS NULL
				ORDER BY
					FAMILYHIST0_.CREATEDDT DESC
				]]>
	</sql-query>
	
	<sql-query name="getListRiwayatPenyakitDahuludanSekarangIPSatuSehat">
		<return-scalar column="RIWAYAT_DAHULU" type="string"/>
		<return-scalar column="RIWAYAT_SEKARANG" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					CQ.QUESTION_TEXT AS RIWAYAT_DAHULU,
					COALESCE(CA.QUESTION_ANSWER, TO_CLOB('-')) AS RIWAYAT_SEKARANG,
					TO_CHAR(CA.CREATEDDATETIME, 'MON DD,YYYY HH:MI:SS AM') AS TIMESTAMP
				FROM
					CLINICAL_ANSWER CA
				INNER JOIN PATIENT P ON
					P.PATIENT_ID = CA.PATIENT
				INNER JOIN CCHPI_QUESTIONS CQ ON
					CQ.ANSWER_ID = CA.ID
				INNER JOIN FORMFIELD FF ON
					FF.ID = CA.QUESTION_ID
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_ID = FF.COMPONENTID
				INNER JOIN CONCEPT CO ON
					CO.ID = FF.FIELD_REFERENCE
				WHERE
					CA.ACTIVE = 1
					AND SC.COMPONENT_CODE = 'CC_HPI'
					AND CA.PATIENT = :patientId
					AND CA.VISIT = :visitId
				ORDER BY
					CA.CREATEDDATETIME DESC
				]]>
	</sql-query>
	
	<sql-query name="getListRiwayatPenyakitDahuluIPSatuSehat">
		<return-scalar column="RIWAYAT_DAHULU" type="string"/>
		<return-scalar column="RIWAYAT_SEKARANG" type="string"/>
		<return-scalar column="TIMESTAMP" type="string"/>
		<![CDATA[SELECT
					CQ.QUESTION_TEXT AS RIWAYAT_DAHULU,
					COALESCE(CA.QUESTION_ANSWER, TO_CLOB('-')) AS RIWAYAT_SEKARANG,
					TO_CHAR(CA.CREATEDDATETIME, 'MON DD,YYYY HH:MI:SS AM') AS TIMESTAMP
				FROM
					CLINICAL_ANSWER CA
				INNER JOIN PATIENT P ON
					P.PATIENT_ID = CA.PATIENT
				INNER JOIN CCHPI_QUESTIONS CQ ON
					CQ.ANSWER_ID = CA.ID
				INNER JOIN FORMFIELD FF ON
					FF.ID = CA.QUESTION_ID
				INNER JOIN SOAPCOMPONENTS SC ON
					SC.COMPONENT_ID = FF.COMPONENTID
				INNER JOIN CONCEPT CO ON
					CO.ID = FF.FIELD_REFERENCE
				WHERE
					CA.ACTIVE = 1
					AND SC.COMPONENT_CODE = 'PMH'
					AND CA.PATIENT = :patientId
					AND CA.VISIT = :visitId
				ORDER BY
					CA.CREATEDDATETIME DESC
				]]>
	</sql-query>
	
	<!-- End Filter Branch -->
	
	
</hibernate-mapping>    